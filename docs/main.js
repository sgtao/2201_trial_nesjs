/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/NES/Cpu.js":
/*!************************!*\
  !*** ./src/NES/Cpu.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cpu\": () => (/* binding */ Cpu)\n/* harmony export */ });\n/* harmony import */ var _Register_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Register.js */ \"./src/NES/Register.js\");\n/* harmony import */ var _Memory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Memory.js */ \"./src/NES/Memory.js\");\n/* harmony import */ var _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CpuOpcodes.js */ \"./src/NES/CpuOpcodes.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger.js */ \"./src/NES/logger.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Cpu.js\n\n\n\n\n\nvar Cpu = /*#__PURE__*/function () {\n  function Cpu(nes) {\n    _classCallCheck(this, Cpu);\n\n    this.isCpu = true;\n    this.nes = nes;\n    this.rom = null;\n    this.ppu = null; // registers\n\n    this.pc = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register16bit();\n    this.sp = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit();\n    this.a = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit();\n    this.x = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit();\n    this.y = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit();\n    this.p = new CpuStatusRegister(); // console.dir(this.p);\n    // RAM inside CPU\n\n    this.ram = new _Memory_js__WEBPACK_IMPORTED_MODULE_1__.Memory(2 * 1024); // 2KB\n  }\n\n  _createClass(Cpu, [{\n    key: \"SetRom\",\n    value: function SetRom(rom) {\n      this.rom = rom;\n    }\n  }, {\n    key: \"SetPpu\",\n    value: function SetPpu(ppu) {\n      this.ppu = ppu;\n    }\n  }, {\n    key: \"InitCpu\",\n    value: function InitCpu() {\n      this.p.store(0x34);\n      this.a.clear();\n      this.x.clear();\n      this.y.clear();\n      this.sp.store(0xFD);\n      this.ram.clear(); // interrupt reset\n\n      this.interrupt(_CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.RESET);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"runCycle\",\n    value: function runCycle() {\n      if (this.isStall() !== true) {\n        var opc = this.fetch();\n        var op = this.decode(opc); // console.dir(op);\n\n        this.operate(op, opc);\n        this.stallCycle = op.cycle;\n        console.log(this.dump());\n      }\n\n      this.stallCycle--;\n    }\n  }, {\n    key: \"isStall\",\n    value: function isStall() {\n      return this.stallCycle > 0;\n    } // interrupt method\n\n  }, {\n    key: \"interrupt\",\n    value: function interrupt(cpu_int) {\n      // console.log(cpu_int);\n      switch (cpu_int.id) {\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.NMI.id:\n          this.pushStack2Bytes(this.pc.load());\n          this.pushStack(this.p.load());\n          this.p.setI();\n          this.p.clearB();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.RESET.id:\n          this.p.setI();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.IRQ.id:\n          if (this.p.isI() === true) {\n            return;\n          }\n\n          this.pushStack2Bytes(this.pc.load());\n          this.pushStack(this.p.load());\n          this.p.setI();\n          this.p.clearB();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.BRK.id:\n          this.pushStack2Bytes(this.pc.load());\n          this.pushStack(this.p.load());\n          this.p.setI();\n          this.p.setB();\n          break;\n\n        default:\n          console.error('Cpu.interrupt is invalid id:' + cpu_int.id);\n          return;\n      } // jump to InterruptHandler\n\n\n      this.pc.store(this.load2Bytes(cpu_int.addr));\n    }\n    /**\r\n     * load/store methods\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(address) {\n      address = address & 0xFFFF; // just in case\n      // 0x0000 - 0x07FF: 2KB internal RAM\n      // 0x0800 - 0x1FFF: Mirrors of 0x0000 - 0x07FF (repeats every 0x800 bytes)\n\n      if (address >= 0 && address < 0x2000) return this.ram.load(address & 0x07FF); // 0x2000 - 0x2007: PPU registers\n      // 0x2008 - 0x3FFF: Mirrors of 0x2000 - 0x2007 (repeats every 8 bytes)\n\n      if (address >= 0x2000 && address < 0x4000) return this.ppu.loadRegister(address & 0x2007); // 0x4000 - 0x4017: APU, PPU and I/O registers\n      // 0x4018 - 0x401F: APU and I/O functionality that is normally disabled\n      // if (address >= 0x4000 && address < 0x4014)\n      //   return this.apu.loadRegister(address);\n      // if (address === 0x4014)\n      //   return this.ppu.loadRegister(address);\n      // if (address === 0x4015)\n      //   return this.apu.loadRegister(address);\n      // if (address === 0x4016)\n      //   return this.pad1.loadRegister();\n      // if (address >= 0x4017 && address < 0x4020)\n      //   return this.apu.loadRegister(address);\n      // cartridge space\n      // if (address >= 0x4020 && address < 0x6000)\n      //   return this.ram.load(address);\n      // 0x6000 - 0x7FFF: Battery Backed Save or Work RAM\n      // if (address >= 0x6000 && address < 0x8000)\n      //   return this.ram.load(address);\n      // 0x8000 - 0xFFFF: ROM\n\n      if (address >= 0x8000 && address < 0x10000) return this.rom.load(address); // when access blank addresses, return all-1.\n\n      return 0x00;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"load2Bytes\",\n    value: function load2Bytes(address) {\n      return this.load(address) | this.load(address + 1) << 8;\n    }\n  }, {\n    key: \"store\",\n    value: function store(addr, value) {\n      var address = addr & 0xFFFF; // 0x0000 - 0x07FF: 2KB internal RAM\n      // 0x0800 - 0x1FFF: Mirrors of 0x0000 - 0x07FF (repeats every 0x800 bytes)\n\n      if (address >= 0 && address < 0x2000) return this.ram.store(address & 0x7FF, value); // 0x2000 - 0x2007: PPU registers\n      // 0x2008 - 0x3FFF: Mirrors of 0x2000 - 0x2007 (repeats every 8 bytes)\n      // if (address >= 0x2000 && address < 0x4000)\n      //   return this.ppu.storeRegister(address & 0x2007, value);\n      // 0x4000 - 0x4017: APU, PPU and I/O registers\n      // 0x4018 - 0x401F: APU and I/O functionality that is normally disabled\n      // if (address >= 0x4000 && address < 0x4014)\n      //   return this.apu.storeRegister(address, value);\n      // if (address === 0x4014)\n      //   return this.ppu.storeRegister(address, value);\n      // if (address === 0x4015)\n      //   return this.apu.storeRegister(address, value);\n      // if (address === 0x4016)\n      //   return this.pad1.storeRegister(value);\n      // if (address >= 0x4017 && address < 0x4020)\n      //   return this.apu.storeRegister(address, value);\n      // cartridge space\n      // if (address >= 0x4020 && address < 0x6000)\n      //   return this.ram.store(address, value);\n      // 0x6000 - 0x7FFF: Battery Backed Save or Work RAM\n      // if (address >= 0x6000 && address < 0x8000)\n      //   return this.ram.store(address, value);\n      // 0x8000 - 0xFFFF: ROM\n      // if (address >= 0x8000 && address < 0x10000)\n\n      return;\n    } // processing methods\n\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"fetch\",\n    value: function fetch() {\n      var opc = this.load(this.pc.load());\n      this.pc.increment();\n      return opc;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(opc) {\n      return _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_OPS[opc];\n    }\n    /**\r\n     * temporary \r\n     */\n\n  }, {\n    key: \"operate\",\n    value: function operate(op, opc) {\n      var address = 0;\n\n      if (op.instruction.id !== _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.INV.id) {\n        address = this.getAddressWithAddressingMode(op);\n      }\n\n      switch (op.instruction.id) {\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.INV.id:\n          // Invalid op , temporary skip\n          console.error('invalid operand');\n          break;\n        // Load and Store Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.LDA.id:\n          this.opLDA(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.LDX.id:\n          this.opLDX(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.LDY.id:\n          this.opLDY(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.STA.id:\n          this.opSTA(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.STX.id:\n          this.opSTX(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.STY.id:\n          this.opSTY(address);\n          break;\n        // Transfer Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TAX.id:\n          this.opTAX();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TAY.id:\n          this.opTAY();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TSX.id:\n          this.opTSX();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TXA.id:\n          this.opTXA();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TXS.id:\n          this.opTXS();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.TYA.id:\n          this.opTYA();\n          break;\n        // Arithmetic/Logical/etc. Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.ADC.id:\n          this.opADC(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.AND.id:\n          this.opAND(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.ASL.id:\n          if (op.mode.id == _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ACCUMULATOR.id) this.a.store(this.opASL_Sub(this.a.load()));else this.opASL(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BIT.id:\n          this.opBIT(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CMP.id:\n          this.opCMP(address, this.a.load());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CPX.id:\n          this.opCMP(address, this.x.load());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CPY.id:\n          this.opCMP(address, this.y.load());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.DEC.id:\n          this.opDEC(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.DEX.id:\n          this.x.store(this.opDEC_Sub(this.x.load()));\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.DEY.id:\n          this.y.store(this.opDEC_Sub(this.y.load()));\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.EOR.id:\n          this.opEOR(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.INC.id:\n          this.opINC(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.INX.id:\n          this.x.store(this.opINC_Sub(this.x.load()));\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.INY.id:\n          this.y.store(this.opINC_Sub(this.y.load()));\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.LSR.id:\n          if (op.mode.id == _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ACCUMULATOR.id) this.a.store(this.opLSR_Sub(this.a.load()));else this.opLSR(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.ORA.id:\n          this.opORA(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.ROL.id:\n          if (op.mode.id == _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ACCUMULATOR.id) this.a.store(this.opROL_Sub(this.a.load()));else this.opROL(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.ROR.id:\n          if (op.mode.id == _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ACCUMULATOR.id) this.a.store(this.opRROR_Sub(this.a.load()));else this.opROR(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.SBC.id:\n          this.opSBC(address);\n          break;\n        // Stack Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.PHA.id:\n          this.opPHA();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.PHP.id:\n          this.opPHP();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.PLA.id:\n          this.opPLA();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.PLP.id:\n          this.opPLP();\n          break;\n        // Jump/Subroutine Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.JMP.id:\n          this.opJMP(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.JSR.id:\n          this.opJSR(address);\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.RTS.id:\n          this.opRTS();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.RTI.id:\n          this.opRTI();\n          break;\n        // Branch Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BCC.id:\n          this.opBranch(address, !this.p.isC());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BCS.id:\n          this.opBranch(address, this.p.isC());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BEQ.id:\n          this.opBranch(address, this.p.isZ());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BMI.id:\n          this.opBranch(address, this.p.isN());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BNE.id:\n          this.opBranch(address, !this.p.isZ());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BPL.id:\n          this.opBranch(address, !this.p.isN());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BVC.id:\n          this.opBranch(address, !this.p.isV());\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BVS.id:\n          this.opBranch(address, this.p.isV());\n          break;\n        // Set and Clear Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CLC.id:\n          this.p.clearC();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CLD.id:\n          this.p.clearD();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CLI.id:\n          this.p.clearI();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.CLV.id:\n          this.p.clearV();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.SEC.id:\n          this.p.setC();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.SED.id:\n          this.p.setD();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.SEI.id:\n          this.p.setI();\n          break;\n        // Other Instructions\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.BRK.id:\n          this.opBRK();\n          break;\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INSTRUCTIONS.NOP.id:\n          break;\n        //\n        // not implemented oprands\n\n        default:\n          // temporary skip.\n          console.error('Cpu.operand is not implemented yet'); // throw new Error('Cpu.operate: Invalid instruction, pc=' + Utility.convertDecToHexString(this.pc.load() - 1) + ' opc=' + Utility.convertDecToHexString(opc, 2) + ' name=' + op.instruction.name);\n\n          break;\n      }\n\n      return opc; // temporary return\n    }\n    /**\r\n     * NES CPU アドレッシングモード \r\n     */\n    // get Address Interface\n\n  }, {\n    key: \"getAddressWithAddressingMode\",\n    value: function getAddressWithAddressingMode(op) {\n      var address; // get address\n\n      switch (op.mode.id) {\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.IMMEDIATE.id:\n          {\n            address = this.getAddressImmediate();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ABSOLUTE.id:\n          {\n            address = this.getAddressAbsolute();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X.id:\n          {\n            address = this.getAddressAbsoluteX();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y.id:\n          {\n            address = this.getAddressAbsoluteY();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ZERO_PAGE.id:\n          {\n            address = this.getAddressZeroPage();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X.id:\n          {\n            address = this.getAddressZeroPageX();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_Y.id:\n          {\n            address = this.getAddressZeroPageY();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.IMPLIED.id:\n          {\n            address = 0;\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.ACCUMULATOR.id:\n          {\n            address = this.a.load();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDIRECT.id:\n          {\n            address = this.getAddressZeroPage();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_INDIRECT_X.id:\n          {\n            address = this.getAddressIndirectX();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.INDEXED_INDIRECT_Y.id:\n          {\n            address = this.getAddressIndirectY();\n            break;\n          }\n\n        case _CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_ADDRESSINGS.RELATIVE.id:\n          {\n            address = this.getAddressRelative(); // console.log('relative addressing : ' + address);\n\n            break;\n          }\n\n        default:\n          throw new Error('Cpu: Unkown addressing mode.');\n        // break;\n      }\n\n      return address;\n    } // Zero Page Addressing\n    // 上位アドレスとして$00、下位アドレスとして2番目のバイトを使用し実効アドレスとします。\n\n  }, {\n    key: \"getAddressZeroPage\",\n    value: function getAddressZeroPage() {\n      var addr = this.load(this.pc.load());\n      this.pc.increment();\n      return addr;\n    } // Immediate Addressing\n    // 2番目のバイトをデータそのものとして使用します。\n\n  }, {\n    key: \"getAddressImmediate\",\n    value: function getAddressImmediate() {\n      var addr = this.pc.load();\n      this.pc.increment();\n      return addr;\n    } // Absolute Addressing\n    // 2番目のバイトを下位アドレス、 3番目のバイトを上位アドレスとして実効アドレスとします。\n\n  }, {\n    key: \"getAddressAbsolute\",\n    value: function getAddressAbsolute() {\n      var addr = this.load2Bytes(this.pc.load());\n      this.pc.incrementBy2();\n      return addr;\n    } // Indexed Zero Page Addressing X\n    // 上位アドレスとして$00、 下位アドレスとして2番目のバイトにインデックスレジスタXを加算した値を実効アドレスとします。\n\n  }, {\n    key: \"getAddressZeroPageX\",\n    value: function getAddressZeroPageX() {\n      var addr = this.getAddressZeroPage();\n      addr += this.x.load();\n      return addr & 0xFF;\n    } // Indexed Zero Page Addressing Y\n    // 上位アドレスとして$00、 下位アドレスとして2番目のバイトにインデックスレジスタYを加算した値を実効アドレスとします。\n\n  }, {\n    key: \"getAddressZeroPageY\",\n    value: function getAddressZeroPageY() {\n      var addr = this.getAddressZeroPage();\n      addr += this.y.load();\n      return addr & 0xFF;\n    } // Indexed Indirect Addressing\n    // 上位アドレスを$00とし、 また2番目のバイトにインデックスレジスタXを加算した値を下位アドレスとします。\n    // このアドレスに格納されている値を実効アドレスの下位バイト、\n    // そしてその次のアドレスに格納されている値を実効アドレスの上位バイトとします。\n    // このインクリメントにおいてキャリーは無視します。\n\n  }, {\n    key: \"getAddressIndirectX\",\n    value: function getAddressIndirectX() {\n      var addr = this.getAddressZeroPage() + this.x.load() & 0xFF;\n      return this.ram.load2Byte(addr);\n    } // Indirect Indexed Addressing\n    // まず上位アドレスを$00とし、下位アドレスとして2番目のバイトを使用します。\n    // このアドレスに格納されている値を次の上位アドレス、\n    // その次のアドレスに格納されている値を次の下位アドレスとします。\n    // このときのインクリメントにおけるキャリーは無視します。\n    // 得られたアドレスにインデックスレジスタYを加算したものを実効アドレスとします。\n\n  }, {\n    key: \"getAddressIndirectY\",\n    value: function getAddressIndirectY() {\n      var addr = this.getAddressZeroPage();\n      addr += this.y.load();\n      return addr & 0xFFFF;\n    } // Indexed Absolute Addressing X\n    // 2番目のバイトを下位アドレス、3番目のバイトを上位アドレスとして、\n    // このアドレスにインデックスレジスタXを加算したものを実効アドレスとします。\n\n  }, {\n    key: \"getAddressAbsoluteX\",\n    value: function getAddressAbsoluteX() {\n      var addr = this.getAddressAbsolute();\n      addr += this.x.load();\n      return addr;\n    } // Indexed Absolute Addressing Y\n    // 2番目のバイトを下位アドレス、3番目のバイトを上位アドレスとして、\n    // このアドレスにインデックスレジスタYを加算したものを実効アドレスとします。\n\n  }, {\n    key: \"getAddressAbsoluteY\",\n    value: function getAddressAbsoluteY() {\n      var addr = this.getAddressAbsolute();\n      addr += this.x.load();\n      return addr;\n    } // Relative Addressing\n    // アドレス「PC + IM8」を取得\n\n  }, {\n    key: \"getAddressRelative\",\n    value: function getAddressRelative() {\n      var addr = this.load(this.pc.load());\n      this.pc.increment();\n      return addr;\n    }\n    /**\r\n     *  update Status Register\r\n     */\n    // bit-7: Negative Flag\n\n  }, {\n    key: \"updateN\",\n    value: function updateN(value) {\n      if ((value & 0x80) === 0) this.p.clearN();else this.p.setN();\n    } // bit-1: Zero Flag\n\n  }, {\n    key: \"updateZ\",\n    value: function updateZ(value) {\n      if ((value & 0xff) === 0) this.p.setZ();else this.p.clearZ();\n    } // bit-0: Carry Flag\n\n  }, {\n    key: \"updateC\",\n    value: function updateC(value) {\n      if ((value & 0x100) === 0) this.p.clearC();else this.p.setC();\n    }\n    /**\r\n     * NES CPU スタック\r\n     * スタック領域: 0x0100~0x01FF\r\n     */\n\n  }, {\n    key: \"getStackAddress\",\n    value: function getStackAddress() {\n      return this.sp.load() + 0x100;\n    } // スタックにpush\n\n  }, {\n    key: \"pushStack\",\n    value: function pushStack(value) {\n      this.store(this.getStackAddress(), value);\n      this.sp.decrement();\n    } // スタックからpop\n\n  }, {\n    key: \"popStack\",\n    value: function popStack() {\n      this.sp.increment();\n      return this.load(this.getStackAddress());\n    }\n  }, {\n    key: \"pushStack2Bytes\",\n    value: function pushStack2Bytes(value) {\n      this.store(this.getStackAddress(), value >> 8 & 0xff);\n      this.sp.decrement();\n      this.store(this.getStackAddress(), value & 0xff);\n      this.sp.decrement();\n    }\n  }, {\n    key: \"popStack2Bytes\",\n    value: function popStack2Bytes() {\n      this.sp.increment();\n      var value = this.load(this.getStackAddress());\n      this.sp.increment();\n      return this.load(this.getStackAddress()) << 8 | value;\n    }\n    /* \r\n     * NES CPU オペコード\r\n     */\n    // LDA : Aレジスタにロード\n\n  }, {\n    key: \"opLDA\",\n    value: function opLDA(address) {\n      var data = this.load(address);\n      this.a.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // LDX : Xレジスタにロード\n\n  }, {\n    key: \"opLDX\",\n    value: function opLDX(address) {\n      var data = this.load(address);\n      this.x.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // LDY : Yレジスタにロード\n\n  }, {\n    key: \"opLDY\",\n    value: function opLDY(address) {\n      var data = this.load(address);\n      this.y.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // STA : Aからメモリにストア\n\n  }, {\n    key: \"opSTA\",\n    value: function opSTA(address) {\n      this.store(address, this.a.load());\n    } // STX : xからメモリにストア\n\n  }, {\n    key: \"opSTX\",\n    value: function opSTX(address) {\n      this.store(address, this.x.load());\n    } // STY : Yからメモリにストア\n\n  }, {\n    key: \"opSTY\",\n    value: function opSTY(address) {\n      this.store(address, this.y.load());\n    } // TAX : AレジスタをXレジスタにコピー\n\n  }, {\n    key: \"opTAX\",\n    value: function opTAX() {\n      var data = this.a.load();\n      this.x.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // TAY : AレジスタをYレジスタにコピー\n\n  }, {\n    key: \"opTAY\",\n    value: function opTAY() {\n      var data = this.a.load();\n      this.y.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // TSX : SレジスタをXレジスタにコピー\n\n  }, {\n    key: \"opTSX\",\n    value: function opTSX() {\n      var data = this.s.load();\n      this.x.store(data);\n      this.p.clearN();\n      this.p.clearZ();\n    } // TXA : XレジスタをAレジスタにコピー\n\n  }, {\n    key: \"opTXA\",\n    value: function opTXA() {\n      var data = this.x.load();\n      this.a.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // TXS : XレジスタをSレジスタにコピー\n\n  }, {\n    key: \"opTXS\",\n    value: function opTXS() {\n      this.sp.store(this.x.load());\n    } // TYA : YレジスタをAレジスタにコピー\n\n  }, {\n    key: \"opTYA\",\n    value: function opTYA() {\n      var data = this.y.load();\n      this.a.store(data);\n      this.updateN(data);\n      this.updateZ(data);\n    } // ADC : (A + メモリ + キャリーフラグ) を演算して結果をAへ格納\n\n  }, {\n    key: \"opADC\",\n    value: function opADC(address) {\n      var oldA = this.a.load();\n      var data = this.load(address);\n      var carry = this.p.isC() ? 1 : 0;\n      var result = data + carry;\n      this.a.store(result);\n      this.updateN(data);\n      this.updateZ(data);\n      this.updateC(result);\n      if (!((oldA ^ data) & 0x80) && (data ^ result) & 0x80) this.p.setV();else this.p.clearV();\n    } // AND : AレジスタとAND演算をする。(結果はAへ格納)\n\n  }, {\n    key: \"opAND\",\n    value: function opAND(address) {\n      var result = this.a.load() & this.load(address);\n      this.a.store(result);\n      this.updateN(result);\n      this.updateZ(result);\n    } // ASL : Aまたはメモリを左へシフトします。\n    // 左シフト\n\n  }, {\n    key: \"opASL_Sub\",\n    value: function opASL_Sub(data) {\n      var result = data << 1;\n      this.updateN(result);\n      this.updateZ(result);\n      this.updateC(result);\n      return result & 0xff;\n    }\n  }, {\n    key: \"opASL\",\n    value: function opASL(address) {\n      this.store(address, this.opASL_Sub(this.load(address)));\n    } // BIT : Aとメモリをビット比較演算します。\n\n  }, {\n    key: \"opBIT\",\n    value: function opBIT(address) {\n      var data = this.load(address);\n      var result = data & this.a.load();\n      this.updateN(data);\n      this.updateZ(result);\n      if ((data & 0x40) == 0) this.p.clearV();else this.p.setV();\n    } // CMP : src(A/X/Y)とメモリを比較演算します。\n\n  }, {\n    key: \"opCMP\",\n    value: function opCMP(address, src) {\n      var data = this.load(address);\n      var result = src - data;\n      this.updateN(result);\n      this.updateZ(result);\n      if (src >= data) this.p.setC();else this.p.clearC();\n    } // DEC : メモリをデクリメントします。\n\n  }, {\n    key: \"opDEC\",\n    value: function opDEC(address) {\n      this.store(address, this.opDEC_Sub(address));\n    }\n  }, {\n    key: \"opDEC_Sub\",\n    value: function opDEC_Sub(data) {\n      var result = data - 1;\n      this.updateN(result);\n      this.updateZ(result);\n      return result & 0xFF;\n    } // EOR : Aとメモリを論理XOR演算します。(結果はAへ格納)\n\n  }, {\n    key: \"opEOR\",\n    value: function opEOR(address) {\n      var result = this.a.load() ^ this.load(address);\n      this.a.store(result);\n      this.updateN(result);\n      this.updateZ(result);\n    } // INC : メモリをインクリメントします。\n\n  }, {\n    key: \"opINC\",\n    value: function opINC(address) {\n      this.store(address, this.opINC_Sub(address));\n    }\n  }, {\n    key: \"opINC_Sub\",\n    value: function opINC_Sub(data) {\n      var result = data + 1;\n      this.updateN(result);\n      this.updateZ(result);\n      return result & 0xFF;\n    } // LSR : Aまたはメモリを右へシフトします。\n    // 右シフト\n\n  }, {\n    key: \"opLSR_Sub\",\n    value: function opLSR_Sub(data) {\n      var result = data >> 1;\n      this.p.clearN();\n      this.updateZ(result);\n      if ((data & 1) == 0) self.p.clearC();else self.p.setC();\n      return result & 0xff;\n    }\n  }, {\n    key: \"opLSR\",\n    value: function opLSR(address) {\n      this.store(address, this.opLSR_Sub(this.load(address)));\n    } // ORA : Aとメモリを論理OR演算をする。(結果はAへ格納)\n\n  }, {\n    key: \"opORA\",\n    value: function opORA(address) {\n      var result = this.a.load() | this.load(address);\n      this.a.store(result);\n      this.updateN(result);\n      this.updateZ(result);\n    } // ROL : Aまたはメモリを左へローテートします。\n    // 左ローテート\n\n  }, {\n    key: \"opROL_Sub\",\n    value: function opROL_Sub(data) {\n      var c = self.p.isC() ? 1 : 0;\n      var result = data << 1 | c;\n      self.updateN(result);\n      self.updateZ(result);\n      self.updateC(result);\n      return result & 0xff;\n    }\n  }, {\n    key: \"opROL\",\n    value: function opROL(address) {\n      this.store(address, this.opROL_Sub(this.load(address)));\n    } // ROR : Aまたはメモリを右へローテートします。\n    // 右ローテート\n\n  }, {\n    key: \"opROR_Sub\",\n    value: function opROR_Sub(data) {\n      var c = this.p.isC() ? 0x80 : 0x00;\n      var result = data >> 1 | c;\n      this.updateN(result);\n      this.updateZ(result);\n      if ((data & 1) == 0) this.p.clearC();else this.p.setC();\n      return result & 0xff;\n    }\n  }, {\n    key: \"opROR\",\n    value: function opROR(address) {\n      this.store(address, this.opROR_Sub(this.load(address)));\n    } // SBC : (A - メモリ - キャリーフラグの反転) を演算し、結果をAに返す。\n\n  }, {\n    key: \"opSBC\",\n    value: function opSBC(address) {\n      // this refer to takahirox-san's INSTRUCTIONS.SBC implement.\n      var src1 = this.a.load();\n      var src2 = this.load(address);\n      var c = this.p.isC() ? 0 : 1;\n      var result = src1 - src2 - c;\n      this.a.store(result);\n      this.updateN(result);\n      this.updateZ(result); // TODO: check if this logic is right.\n\n      if (src1 >= src2 + c) this.p.setC();else this.p.clearC(); // TODO: implement right overflow logic.\n      //       this is just a temporal logic.\n\n      if ((src1 ^ result) & 0x80 && (src1 ^ src2) & 0x80) this.p.setV();else this.p.clearV();\n    } // PHA : Aをスタックにプッシュダウンします。\n\n  }, {\n    key: \"opPHA\",\n    value: function opPHA() {\n      this.pushStack(this.a.load());\n    } // PHP : Pをスタックにプッシュダウンします。\n\n  }, {\n    key: \"opPHP\",\n    value: function opPHP() {\n      this.pushStack(this.p.load());\n    } // PLA : スタックからAにポップアップします。\n\n  }, {\n    key: \"opPLA\",\n    value: function opPLA() {\n      var result = this.popStack();\n      this.a.store(result);\n      this.updateN(result);\n      this.updateZ(result);\n    } // PLP : スタックからPにポップアップします。\n\n  }, {\n    key: \"opPLP\",\n    value: function opPLP() {\n      this.p.store(this.popStack());\n    } // JMP : アドレスへジャンプします。\n\n  }, {\n    key: \"opJMP\",\n    value: function opJMP(address) {\n      this.pc.store(address);\n    } // JSR : サブルーチンを呼び出します。\n\n  }, {\n    key: \"opJSR\",\n    value: function opJSR(address) {\n      this.pc.decrement();\n      this.pushStack2Bytes(this.pc.load());\n      this.pc.store(address);\n    } // RTS : サブルーチンから復帰します。\n\n  }, {\n    key: \"opRTS\",\n    value: function opRTS() {\n      this.pc.store(this.popStack2Bytes());\n      this.pc.increment();\n    } // RTI : 割り込みルーチンから復帰します。\n\n  }, {\n    key: \"opRTI\",\n    value: function opRTI() {\n      this.p.store(this.popStack());\n      this.pc.store(this.popStack2Bytes());\n    } // B** : ブランチ処理(flagがtrueの時、pc+(Relative)addressへjumpする)\n\n  }, {\n    key: \"opBranch\",\n    value: function opBranch(address, flag) {\n      if (flag) {\n        // console.log('jump from ' + this.pc.load() + ' to  +' + address);\n        this.pc.add(address); // console.log(' --> ' + this.pc.load());\n      }\n    } // BRK : ソフトウェア割り込みを起こします。\n    // Forced Interrupt with PC + 2 to SP, P to S, set status(B)\n\n  }, {\n    key: \"opBRK\",\n    value: function opBRK() {\n      this.pc.increment();\n      this.p.setA();\n      this.p.setB();\n      this.interrupt(_CpuOpcodes_js__WEBPACK_IMPORTED_MODULE_2__.CPU_INTS.BRK);\n    } // End Of Operands\n    //\n\n    /**\r\n     * dump methods\r\n     */\n\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      var buffer = 'cpu ';\n      var opc = this.load(this.pc.load());\n      var op = this.decode(opc);\n      buffer += 'p:' + this.p.dump() + ' ';\n      buffer += 'pc:' + this.pc.dump() + ' ';\n      buffer += 'sp:' + this.sp.dump() + ' ';\n      buffer += 'a:' + this.a.dump() + ' ';\n      buffer += 'x:' + this.x.dump() + ' ';\n      buffer += 'y:' + this.y.dump() + ' ';\n      buffer += this.dump_cpu_op(op, opc);\n      buffer += '\\n';\n      return buffer;\n    }\n  }, {\n    key: \"dump_cpu_op\",\n    value: function dump_cpu_op(op, opc) {\n      var buffer = 'opc=(0x' + _logger_js__WEBPACK_IMPORTED_MODULE_3__.log.toHex(opc) + '): ';\n      buffer += op.instruction.name + ' ';\n      if (op.mode != null) buffer += op.mode.name;\n      buffer += ' ';\n      return buffer;\n    }\n  }, {\n    key: \"dump_memory_map\",\n    value: function dump_memory_map() {\n      var cpu_memory = new _Memory_js__WEBPACK_IMPORTED_MODULE_1__.Memory(0x10000); // 64KB\n\n      for (var i = 0; i < 0x10000; i++) {\n        cpu_memory.store(i, this.load(i));\n      }\n\n      return cpu_memory.dump();\n    }\n  }]);\n\n  return Cpu;\n}();\n\nvar CpuStatusRegister = /*#__PURE__*/function (_Register8bit) {\n  _inherits(CpuStatusRegister, _Register8bit);\n\n  var _super = _createSuper(CpuStatusRegister);\n\n  function CpuStatusRegister() {\n    var _this;\n\n    _classCallCheck(this, CpuStatusRegister);\n\n    _this = _super.call(this);\n    _this.isCpuStatusRegister = true;\n    _this.N_BIT = 7;\n    _this.V_BIT = 6;\n    _this.A_BIT = 5; // unused bit. A is random name\n\n    _this.B_BIT = 4;\n    _this.D_BIT = 3;\n    _this.I_BIT = 2;\n    _this.Z_BIT = 1;\n    _this.C_BIT = 0;\n    return _this;\n  }\n\n  _createClass(CpuStatusRegister, [{\n    key: \"isN\",\n    value: function isN() {\n      return this.isBitSet(this.N_BIT);\n    }\n  }, {\n    key: \"setN\",\n    value: function setN() {\n      this.setBit(this.N_BIT);\n    }\n  }, {\n    key: \"clearN\",\n    value: function clearN() {\n      this.clearBit(this.N_BIT);\n    }\n  }, {\n    key: \"isV\",\n    value: function isV() {\n      return this.isBitSet(this.V_BIT);\n    }\n  }, {\n    key: \"setV\",\n    value: function setV() {\n      this.setBit(this.V_BIT);\n    }\n  }, {\n    key: \"clearV\",\n    value: function clearV() {\n      this.clearBit(this.V_BIT);\n    }\n  }, {\n    key: \"isA\",\n    value: function isA() {\n      return this.IsBitSet(this.A_BIT);\n    }\n  }, {\n    key: \"setA\",\n    value: function setA() {\n      this.setBit(this.A_BIT);\n    }\n  }, {\n    key: \"clearA\",\n    value: function clearA() {\n      this.clearBit(this.A_BIT);\n    }\n  }, {\n    key: \"isB\",\n    value: function isB() {\n      return this.isBitSet(this.B_BIT);\n    }\n  }, {\n    key: \"setB\",\n    value: function setB() {\n      this.setBit(this.B_BIT);\n    }\n  }, {\n    key: \"clearB\",\n    value: function clearB() {\n      this.clearBit(this.B_BIT);\n    }\n  }, {\n    key: \"isD\",\n    value: function isD() {\n      return this.isBitSet(this.D_BIT);\n    }\n  }, {\n    key: \"setD\",\n    value: function setD() {\n      this.setBit(this.D_BIT);\n    }\n  }, {\n    key: \"clearD\",\n    value: function clearD() {\n      this.clearBit(this.D_BIT);\n    }\n  }, {\n    key: \"isI\",\n    value: function isI() {\n      return this.isBitSet(this.I_BIT);\n    }\n  }, {\n    key: \"setI\",\n    value: function setI() {\n      this.setBit(this.I_BIT);\n    }\n  }, {\n    key: \"clearI\",\n    value: function clearI() {\n      this.clearBit(this.I_BIT);\n    }\n  }, {\n    key: \"isZ\",\n    value: function isZ() {\n      return this.isBitSet(this.Z_BIT);\n    }\n  }, {\n    key: \"setZ\",\n    value: function setZ() {\n      this.setBit(this.Z_BIT);\n    }\n  }, {\n    key: \"clearZ\",\n    value: function clearZ() {\n      this.clearBit(this.Z_BIT);\n    }\n  }, {\n    key: \"isC\",\n    value: function isC() {\n      return this.isBitSet(this.C_BIT);\n    }\n  }, {\n    key: \"setC\",\n    value: function setC() {\n      this.setBit(this.C_BIT);\n    }\n  }, {\n    key: \"clearC\",\n    value: function clearC() {\n      this.clearBit(this.C_BIT);\n    } // dump\n\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      var buffer = '';\n      buffer += _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit.prototype.dump.call(this);\n      buffer += '(';\n      buffer += this.isN() ? 'N' : '-';\n      buffer += this.isV() ? 'V' : '-';\n      buffer += this.isB() ? 'B' : '-';\n      buffer += this.isD() ? 'D' : '-';\n      buffer += this.isI() ? 'I' : '-';\n      buffer += this.isZ() ? 'Z' : '-';\n      buffer += this.isC() ? 'C' : '-';\n      buffer += ')';\n      return buffer;\n    }\n  }]);\n\n  return CpuStatusRegister;\n}(_Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit);\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Cpu.js?");

/***/ }),

/***/ "./src/NES/CpuOpcodes.js":
/*!*******************************!*\
  !*** ./src/NES/CpuOpcodes.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CPU_INTS\": () => (/* binding */ CPU_INTS),\n/* harmony export */   \"CPU_ADDRESSINGS\": () => (/* binding */ CPU_ADDRESSINGS),\n/* harmony export */   \"CPU_INSTRUCTIONS\": () => (/* binding */ CPU_INSTRUCTIONS),\n/* harmony export */   \"CPU_OPS\": () => (/* binding */ CPU_OPS)\n/* harmony export */ });\n// CpuOpcodes.js\n// Interrups\nvar CPU_INTS = {\n  NMI: {\n    'id': 0,\n    'addr': 0xFFFA\n  },\n  RESET: {\n    'id': 1,\n    'addr': 0xFFFC\n  },\n  IRQ: {\n    'id': 2,\n    'addr': 0xFFFE\n  },\n  BRK: {\n    'id': 3,\n    'addr': 0xFFFE\n  } // not interrupt but instruction\n\n}; // Instructions\n\nvar CPU_INSTRUCTIONS = {\n  INV: {\n    'id': 0,\n    'name': 'inv'\n  },\n  // Invalid\n  ADC: {\n    'id': 1,\n    'name': 'adc'\n  },\n  AND: {\n    'id': 2,\n    'name': 'and'\n  },\n  ASL: {\n    'id': 3,\n    'name': 'asl'\n  },\n  BCC: {\n    'id': 4,\n    'name': 'bcc'\n  },\n  BCS: {\n    'id': 5,\n    'name': 'bcs'\n  },\n  BEQ: {\n    'id': 6,\n    'name': 'beq'\n  },\n  BIT: {\n    'id': 7,\n    'name': 'bit'\n  },\n  BMI: {\n    'id': 8,\n    'name': 'bmi'\n  },\n  BNE: {\n    'id': 9,\n    'name': 'bne'\n  },\n  BPL: {\n    'id': 10,\n    'name': 'bpl'\n  },\n  BRK: {\n    'id': 11,\n    'name': 'brk'\n  },\n  BVC: {\n    'id': 12,\n    'name': 'bvc'\n  },\n  BVS: {\n    'id': 13,\n    'name': 'bvs'\n  },\n  CLC: {\n    'id': 14,\n    'name': 'clc'\n  },\n  CLD: {\n    'id': 15,\n    'name': 'cld'\n  },\n  CLI: {\n    'id': 16,\n    'name': 'cli'\n  },\n  CLV: {\n    'id': 17,\n    'name': 'clv'\n  },\n  CMP: {\n    'id': 18,\n    'name': 'cmp'\n  },\n  CPX: {\n    'id': 19,\n    'name': 'cpx'\n  },\n  CPY: {\n    'id': 20,\n    'name': 'cpy'\n  },\n  DEC: {\n    'id': 21,\n    'name': 'dec'\n  },\n  DEX: {\n    'id': 22,\n    'name': 'dex'\n  },\n  DEY: {\n    'id': 23,\n    'name': 'dey'\n  },\n  EOR: {\n    'id': 24,\n    'name': 'eor'\n  },\n  INC: {\n    'id': 25,\n    'name': 'inc'\n  },\n  INX: {\n    'id': 26,\n    'name': 'inx'\n  },\n  INY: {\n    'id': 27,\n    'name': 'iny'\n  },\n  JMP: {\n    'id': 28,\n    'name': 'jmp'\n  },\n  JSR: {\n    'id': 29,\n    'name': 'jsr'\n  },\n  LDA: {\n    'id': 30,\n    'name': 'lda'\n  },\n  LDX: {\n    'id': 31,\n    'name': 'ldx'\n  },\n  LDY: {\n    'id': 32,\n    'name': 'ldy'\n  },\n  LSR: {\n    'id': 33,\n    'name': 'lsr'\n  },\n  NOP: {\n    'id': 34,\n    'name': 'nop'\n  },\n  ORA: {\n    'id': 35,\n    'name': 'ora'\n  },\n  PHA: {\n    'id': 36,\n    'name': 'pha'\n  },\n  PHP: {\n    'id': 37,\n    'name': 'php'\n  },\n  PLA: {\n    'id': 38,\n    'name': 'pla'\n  },\n  PLP: {\n    'id': 39,\n    'name': 'plp'\n  },\n  ROL: {\n    'id': 40,\n    'name': 'rol'\n  },\n  ROR: {\n    'id': 41,\n    'name': 'ror'\n  },\n  RTI: {\n    'id': 42,\n    'name': 'rti'\n  },\n  RTS: {\n    'id': 43,\n    'name': 'rts'\n  },\n  SBC: {\n    'id': 44,\n    'name': 'sbc'\n  },\n  SEC: {\n    'id': 45,\n    'name': 'sec'\n  },\n  SED: {\n    'id': 46,\n    'name': 'sed'\n  },\n  SEI: {\n    'id': 47,\n    'name': 'sei'\n  },\n  STA: {\n    'id': 48,\n    'name': 'sta'\n  },\n  STX: {\n    'id': 49,\n    'name': 'stx'\n  },\n  STY: {\n    'id': 50,\n    'name': 'sty'\n  },\n  TAX: {\n    'id': 51,\n    'name': 'tax'\n  },\n  TAY: {\n    'id': 52,\n    'name': 'tay'\n  },\n  TSX: {\n    'id': 53,\n    'name': 'tsx'\n  },\n  TXA: {\n    'id': 54,\n    'name': 'txa'\n  },\n  TXS: {\n    'id': 55,\n    'name': 'txs'\n  },\n  TYA: {\n    'id': 56,\n    'name': 'tya'\n  }\n}; // Addressing modes\n\nvar CPU_ADDRESSINGS = {\n  IMMEDIATE: {\n    'id': 0,\n    'pc': 2,\n    'name': 'immediate'\n  },\n  ABSOLUTE: {\n    'id': 1,\n    'pc': 3,\n    'name': 'absolute'\n  },\n  INDEXED_ABSOLUTE_X: {\n    'id': 2,\n    'pc': 3,\n    'name': 'indexed_absolute_x'\n  },\n  INDEXED_ABSOLUTE_Y: {\n    'id': 3,\n    'pc': 3,\n    'name': 'indexed_absolute_y'\n  },\n  ZERO_PAGE: {\n    'id': 4,\n    'pc': 2,\n    'name': 'zero_page'\n  },\n  INDEXED_ZERO_PAGE_X: {\n    'id': 5,\n    'pc': 2,\n    'name': 'indexed_zero_page_x'\n  },\n  INDEXED_ZERO_PAGE_Y: {\n    'id': 6,\n    'pc': 2,\n    'name': 'indexed_zero_page_y'\n  },\n  IMPLIED: {\n    'id': 7,\n    'pc': 1,\n    'name': 'implied'\n  },\n  ACCUMULATOR: {\n    'id': 8,\n    'pc': 1,\n    'name': 'accumulator'\n  },\n  INDIRECT: {\n    'id': 9,\n    'pc': 3,\n    'name': 'indirect'\n  },\n  INDEXED_INDIRECT_X: {\n    'id': 10,\n    'pc': 2,\n    'name': 'indexed_indirect_x'\n  },\n  INDEXED_INDIRECT_Y: {\n    'id': 11,\n    'pc': 2,\n    'name': 'indexed_indirect_y'\n  },\n  RELATIVE: {\n    'id': 12,\n    'pc': 2,\n    'name': 'relative'\n  }\n}; // Operations (the combinations of interuction and addressing mode)\n// Decoding in advance because it's much easier than implementing decoder.\n\nvar CPU_OPS = {\n  0x00: {\n    'instruction': CPU_INSTRUCTIONS.BRK,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x01: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0x02: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x03: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x04: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x05: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x06: {\n    'instruction': CPU_INSTRUCTIONS.ASL,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x07: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x08: {\n    'instruction': CPU_INSTRUCTIONS.PHP,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x09: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0x0A: {\n    'instruction': CPU_INSTRUCTIONS.ASL,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.ACCUMULATOR\n  },\n  0x0B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x0C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x0D: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x0E: {\n    'instruction': CPU_INSTRUCTIONS.ASL,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x0F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x10: {\n    'instruction': CPU_INSTRUCTIONS.BPL,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0x11: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0x12: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x13: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x14: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x15: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x16: {\n    'instruction': CPU_INSTRUCTIONS.ASL,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x17: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x18: {\n    'instruction': CPU_INSTRUCTIONS.CLC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x19: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0x1A: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x1B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x1C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x1D: {\n    'instruction': CPU_INSTRUCTIONS.ORA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x1E: {\n    'instruction': CPU_INSTRUCTIONS.ASL,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x1F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x20: {\n    'instruction': CPU_INSTRUCTIONS.JSR,\n    'cycle': 0,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x21: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0x22: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x23: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x24: {\n    'instruction': CPU_INSTRUCTIONS.BIT,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x25: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x26: {\n    'instruction': CPU_INSTRUCTIONS.ROL,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x27: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x28: {\n    'instruction': CPU_INSTRUCTIONS.PLP,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x29: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0x2A: {\n    'instruction': CPU_INSTRUCTIONS.ROL,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.ACCUMULATOR\n  },\n  0x2B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x2C: {\n    'instruction': CPU_INSTRUCTIONS.BIT,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x2D: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x2E: {\n    'instruction': CPU_INSTRUCTIONS.ROL,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x2F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x30: {\n    'instruction': CPU_INSTRUCTIONS.BMI,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0x31: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0x32: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x33: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x34: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x35: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x36: {\n    'instruction': CPU_INSTRUCTIONS.ROL,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x37: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x38: {\n    'instruction': CPU_INSTRUCTIONS.SEC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x39: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0x3A: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x3B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x3C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x3D: {\n    'instruction': CPU_INSTRUCTIONS.AND,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x3E: {\n    'instruction': CPU_INSTRUCTIONS.ROL,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x3F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x40: {\n    'instruction': CPU_INSTRUCTIONS.RTI,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x41: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0x42: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x43: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x44: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x45: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x46: {\n    'instruction': CPU_INSTRUCTIONS.LSR,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x47: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x48: {\n    'instruction': CPU_INSTRUCTIONS.PHA,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x49: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0x4A: {\n    'instruction': CPU_INSTRUCTIONS.LSR,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.ACCUMULATOR\n  },\n  0x4B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x4C: {\n    'instruction': CPU_INSTRUCTIONS.JMP,\n    'cycle': 0,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x4D: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x4E: {\n    'instruction': CPU_INSTRUCTIONS.LSR,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x4F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x50: {\n    'instruction': CPU_INSTRUCTIONS.BVC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0x51: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0x52: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x53: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x54: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x55: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x56: {\n    'instruction': CPU_INSTRUCTIONS.LSR,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x57: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x58: {\n    'instruction': CPU_INSTRUCTIONS.CLI,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x59: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0x5A: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x5B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x5C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x5D: {\n    'instruction': CPU_INSTRUCTIONS.EOR,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x5E: {\n    'instruction': CPU_INSTRUCTIONS.LSR,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x5F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x60: {\n    'instruction': CPU_INSTRUCTIONS.RTS,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x61: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0x62: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x63: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x64: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x65: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x66: {\n    'instruction': CPU_INSTRUCTIONS.ROR,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x67: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x68: {\n    'instruction': CPU_INSTRUCTIONS.PLA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x69: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0x6A: {\n    'instruction': CPU_INSTRUCTIONS.ROR,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.ACCUMULATOR\n  },\n  0x6B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x6C: {\n    'instruction': CPU_INSTRUCTIONS.JMP,\n    'cycle': 0,\n    'mode': CPU_ADDRESSINGS.INDIRECT\n  },\n  0x6D: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x6E: {\n    'instruction': CPU_INSTRUCTIONS.ROR,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x6F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x70: {\n    'instruction': CPU_INSTRUCTIONS.BVS,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0x71: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0x72: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x73: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x74: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x75: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x76: {\n    'instruction': CPU_INSTRUCTIONS.ROR,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x77: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x78: {\n    'instruction': CPU_INSTRUCTIONS.SEI,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x79: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0x7A: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x7B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x7C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x7D: {\n    'instruction': CPU_INSTRUCTIONS.ADC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x7E: {\n    'instruction': CPU_INSTRUCTIONS.ROR,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x7F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x80: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x81: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0x82: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x83: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x84: {\n    'instruction': CPU_INSTRUCTIONS.STY,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x85: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x86: {\n    'instruction': CPU_INSTRUCTIONS.STX,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0x87: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x88: {\n    'instruction': CPU_INSTRUCTIONS.DEY,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x89: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x8A: {\n    'instruction': CPU_INSTRUCTIONS.TXA,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x8B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x8C: {\n    'instruction': CPU_INSTRUCTIONS.STY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x8D: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x8E: {\n    'instruction': CPU_INSTRUCTIONS.STX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0x8F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x90: {\n    'instruction': CPU_INSTRUCTIONS.BCC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0x91: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0x92: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x93: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x94: {\n    'instruction': CPU_INSTRUCTIONS.STY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x95: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0x96: {\n    'instruction': CPU_INSTRUCTIONS.STX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_Y\n  },\n  0x97: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x98: {\n    'instruction': CPU_INSTRUCTIONS.TYA,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x99: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0x9A: {\n    'instruction': CPU_INSTRUCTIONS.TXS,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0x9B: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x9C: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x9D: {\n    'instruction': CPU_INSTRUCTIONS.STA,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0x9E: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0x9F: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xA0: {\n    'instruction': CPU_INSTRUCTIONS.LDY,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xA1: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0xA2: {\n    'instruction': CPU_INSTRUCTIONS.LDX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xA3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xA4: {\n    'instruction': CPU_INSTRUCTIONS.LDY,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xA5: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xA6: {\n    'instruction': CPU_INSTRUCTIONS.LDX,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xA7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xA8: {\n    'instruction': CPU_INSTRUCTIONS.TAY,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xA9: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xAA: {\n    'instruction': CPU_INSTRUCTIONS.TAX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xAB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xAC: {\n    'instruction': CPU_INSTRUCTIONS.LDY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xAD: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xAE: {\n    'instruction': CPU_INSTRUCTIONS.LDX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xAF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xB0: {\n    'instruction': CPU_INSTRUCTIONS.BCS,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0xB1: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0xB2: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xB3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xB4: {\n    'instruction': CPU_INSTRUCTIONS.LDY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xB5: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xB6: {\n    'instruction': CPU_INSTRUCTIONS.LDX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_Y\n  },\n  0xB7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xB8: {\n    'instruction': CPU_INSTRUCTIONS.CLV,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xB9: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0xBA: {\n    'instruction': CPU_INSTRUCTIONS.TSX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xBB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xBC: {\n    'instruction': CPU_INSTRUCTIONS.LDY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xBD: {\n    'instruction': CPU_INSTRUCTIONS.LDA,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xBE: {\n    'instruction': CPU_INSTRUCTIONS.LDX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0xBF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xC0: {\n    'instruction': CPU_INSTRUCTIONS.CPY,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xC1: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0xC2: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xC3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xC4: {\n    'instruction': CPU_INSTRUCTIONS.CPY,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xC5: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xC6: {\n    'instruction': CPU_INSTRUCTIONS.DEC,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xC7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xC8: {\n    'instruction': CPU_INSTRUCTIONS.INY,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xC9: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xCA: {\n    'instruction': CPU_INSTRUCTIONS.DEX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xCB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xCC: {\n    'instruction': CPU_INSTRUCTIONS.CPY,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xCD: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xCE: {\n    'instruction': CPU_INSTRUCTIONS.DEC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xCF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xD0: {\n    'instruction': CPU_INSTRUCTIONS.BNE,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0xD1: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0xD2: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xD3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xD4: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xD5: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xD6: {\n    'instruction': CPU_INSTRUCTIONS.DEC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xD7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xD8: {\n    'instruction': CPU_INSTRUCTIONS.CLD,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xD9: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0xDA: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xDB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xDC: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xDD: {\n    'instruction': CPU_INSTRUCTIONS.CMP,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xDE: {\n    'instruction': CPU_INSTRUCTIONS.DEC,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xDF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xE0: {\n    'instruction': CPU_INSTRUCTIONS.CPX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xE1: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_X\n  },\n  0xE2: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xE3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xE4: {\n    'instruction': CPU_INSTRUCTIONS.CPX,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xE5: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 3,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xE6: {\n    'instruction': CPU_INSTRUCTIONS.INC,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.ZERO_PAGE\n  },\n  0xE7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xE8: {\n    'instruction': CPU_INSTRUCTIONS.INX,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xE9: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMMEDIATE\n  },\n  0xEA: {\n    'instruction': CPU_INSTRUCTIONS.NOP,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xEB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xEC: {\n    'instruction': CPU_INSTRUCTIONS.CPX,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xED: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xEE: {\n    'instruction': CPU_INSTRUCTIONS.INC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.ABSOLUTE\n  },\n  0xEF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xF0: {\n    'instruction': CPU_INSTRUCTIONS.BEQ,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.RELATIVE\n  },\n  0xF1: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 5,\n    'mode': CPU_ADDRESSINGS.INDEXED_INDIRECT_Y\n  },\n  0xF2: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xF3: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xF4: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xF5: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xF6: {\n    'instruction': CPU_INSTRUCTIONS.INC,\n    'cycle': 6,\n    'mode': CPU_ADDRESSINGS.INDEXED_ZERO_PAGE_X\n  },\n  0xF7: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xF8: {\n    'instruction': CPU_INSTRUCTIONS.SED,\n    'cycle': 2,\n    'mode': CPU_ADDRESSINGS.IMPLIED\n  },\n  0xF9: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_Y\n  },\n  0xFA: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xFB: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xFC: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  },\n  0xFD: {\n    'instruction': CPU_INSTRUCTIONS.SBC,\n    'cycle': 4,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xFE: {\n    'instruction': CPU_INSTRUCTIONS.INC,\n    'cycle': 7,\n    'mode': CPU_ADDRESSINGS.INDEXED_ABSOLUTE_X\n  },\n  0xFF: {\n    'instruction': CPU_INSTRUCTIONS.INV,\n    'cycle': 0,\n    'mode': null\n  }\n};\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/CpuOpcodes.js?");

/***/ }),

/***/ "./src/NES/Display.js":
/*!****************************!*\
  !*** ./src/NES/Display.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Display\": () => (/* binding */ Display)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Display.js\n// 定数\nvar DISP_WIDTH = 256;\nvar DISP_HEIGHT = 240; // クラス\n\nvar Display = /*#__PURE__*/function () {\n  function Display(canvas) {\n    _classCallCheck(this, Display);\n\n    // requestAnimationFrame 対応ブラウザのみ遊べます\n    if (typeof window.requestAnimationFrame === \"undefined\") {\n      window.alert('use a brower that supports requestAnimationFrame method');\n      return false;\n    }\n\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.ctx_multiple = 1;\n    this.width = DISP_WIDTH;\n    this.height = DISP_HEIGHT;\n    this.ImageData = this.ctx.createImageData(this.width, this.height);\n    this.uint32 = new Uint32Array(this.ImageData.data.buffer);\n    this.resizeCanvas();\n  }\n\n  _createClass(Display, [{\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      // Canvasを初期化(真っ黒画面にする)\n      if (!this.ctx) {\n        return false;\n      }\n\n      this.ImageData = this.ctx.createImageData(this.canvas.width, this.canvas.height);\n\n      for (var i = 0; i < DISP_HEIGHT; i++) {\n        for (var j = 0; j < DISP_WIDTH; j++) {\n          this.renderPixel(j, i, 0xA0);\n        }\n      }\n\n      this.updateScreen();\n      return true;\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas() {\n      console.log('at resizeCanvas, this.width is ', this.width);\n      var magnification = Math.floor(window.innerWidth * 0.9 / this.width);\n\n      if (this.ctx_multiple != magnification) {\n        console.log(\"previous canvas size \".concat(this.width, \", current windows width(x0.9)= \").concat(window.innerWidth * 0.9));\n        console.log(\"change magnification to \".concat(magnification));\n        this.ctx_multiple = magnification >= 1 ? magnification : 1;\n      }\n\n      this.canvas.width = DISP_WIDTH * this.ctx_multiple;\n      this.canvas.height = DISP_HEIGHT * this.ctx_multiple;\n      this.canvas.style.width = DISP_WIDTH * this.ctx_multiple;\n      this.canvas.style.height = DISP_HEIGHT * this.ctx_multiple;\n      this.initCanvas();\n    }\n  }, {\n    key: \"renderPixel\",\n    value: function renderPixel(x, y, c) {\n      var index = y * DISP_WIDTH + x;\n      this.uint32[index] = c;\n    }\n  }, {\n    key: \"updateScreen\",\n    value: function updateScreen() {\n      for (var i = 0; i < this.canvas.width * this.canvas.height * 4; i += 4) {\n        this.ImageData.data[i + 3] = this.uint32[i / 4];\n      }\n\n      this.ctx.putImageData(this.ImageData, 0, 0);\n      return;\n    }\n  }]);\n\n  return Display;\n}(); //\n\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Display.js?");

/***/ }),

/***/ "./src/NES/Mapper.js":
/*!***************************!*\
  !*** ./src/NES/Mapper.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mapper\": () => (/* binding */ Mapper)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Mapper.js\nvar MAPPERS = {\n  0: {\n    'name': 'NROM'\n  },\n  1: {\n    'name': 'MMC1'\n  },\n  2: {\n    'name': 'UNROM'\n  },\n  3: {\n    'name': 'CNROM'\n  },\n  4: {\n    'name': 'MMC3'\n  },\n  76: {\n    'name': 'Mapper76'\n  }\n};\n\nvar Mapper = /*#__PURE__*/function () {\n  function Mapper(rom) {\n    _classCallCheck(this, Mapper);\n\n    this.isMapper = true;\n    this.rom = rom;\n    this.prgBankNum = rom.header_parse.prog_bank_num;\n    this.chrBankNum = rom.header_parse.char_bank_num;\n    this.mapper_num = rom.header_parse.mapper_num; // console.log(MAPPERS);\n  }\n\n  _createClass(Mapper, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.getMapperParam(this.mapper_num).name;\n    }\n  }, {\n    key: \"getMapperParam\",\n    value: function getMapperParam(number) {\n      if (MAPPERS[number] === undefined) throw new Error('unsupport No.' + number + ' Mapper');\n      return MAPPERS[number];\n    }\n    /**\r\n     * Mapper0(NROM) implementation\r\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(address) {\n      return address - 0x8000;\n    }\n    /**\r\n     * Maps CPU memory address 0x0000 - 0x1FFF to the offset\r\n     * in Character segment of Rom for Character ROM access\r\n     */\n\n  }, {\n    key: \"mapForChrRom\",\n    value: function mapForChrRom(address) {\n      return address;\n    }\n    /**\r\n     * In general, updates control registers in Mapper\r\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(address, value) {}\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"getMirroringType\",\n    value: function getMirroringType() {\n      // screen_type is : \n      //   0 : 'SINGLE_SCREEN'\n      //   1 : 'HORIZONTAL'\n      //   2 : 'VERTICAL'\n      //   3 : 'FOUR_SCREEN'\n      return this.rom.header_parse.screen_type;\n    }\n  }]);\n\n  return Mapper;\n}();\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Mapper.js?");

/***/ }),

/***/ "./src/NES/Memory.js":
/*!***************************!*\
  !*** ./src/NES/Memory.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Memory\": () => (/* binding */ Memory)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./src/NES/logger.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Memory.js\n\n/**\r\n * Generic 8bit-word Memory.\r\n */\n\n/**\r\n * @param {ArrayBuffer|integer} arrayBuffer -\r\n */\n\nvar Memory = /*#__PURE__*/function () {\n  function Memory(arrayBuffer) {\n    _classCallCheck(this, Memory);\n\n    this.isMemory = true; // console.dir(arrayBuffer);\n\n    this.data = new Uint8Array(arrayBuffer);\n  }\n  /**\r\n   *  class methods\r\n   */\n\n\n  _createClass(Memory, [{\n    key: \"clear\",\n    value: function clear() {\n      for (var i = 0, il = this.getCapacity(); i < il; i++) {\n        this.storeWithoutMapping(i, 0);\n      }\n    }\n  }, {\n    key: \"getCapacity\",\n    value: function getCapacity() {\n      return this.data.byteLength;\n    }\n  }, {\n    key: \"load\",\n    value: function load(address) {\n      return this.data[address];\n    }\n  }, {\n    key: \"load2Byte\",\n    value: function load2Byte(address) {\n      return this.data[address + 1] << 8 | this.data[address];\n    }\n  }, {\n    key: \"loadWithoutMapping\",\n    value: function loadWithoutMapping(address) {\n      return this.data[address];\n    }\n  }, {\n    key: \"store\",\n    value: function store(address, value) {\n      if (address > this.getCapacity()) return false;\n      this.data[address] = value;\n      return true;\n    }\n  }, {\n    key: \"storeWithoutMapping\",\n    value: function storeWithoutMapping(address, value) {\n      this.data[address] = value;\n    }\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      // log.logHexarray(this.data);\n      // return log.toHexarray(this.data);\n      var buffer = ''; // let previousIsZeroLine = false;\n\n      var offset = 0;\n      var end = this.getCapacity();\n\n      for (var i = offset; i < end; i++) {\n        if (i % 0x10 === 0) {\n          buffer += _logger_js__WEBPACK_IMPORTED_MODULE_0__.log.DecToHexString(i - offset, 4) + ' ';\n        }\n\n        var value = this.load(i);\n        buffer += _logger_js__WEBPACK_IMPORTED_MODULE_0__.log.DecToHexString(value, 2, true) + ' ';\n        if (i % 0x10 === 0xf) buffer += '\\n';\n      }\n\n      return buffer;\n    }\n  }]);\n\n  return Memory;\n}(); // export\n\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Memory.js?");

/***/ }),

/***/ "./src/NES/Ppu.js":
/*!************************!*\
  !*** ./src/NES/Ppu.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ppu\": () => (/* binding */ Ppu)\n/* harmony export */ });\n/* harmony import */ var _Register_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Register.js */ \"./src/NES/Register.js\");\n/* harmony import */ var _Memory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Memory.js */ \"./src/NES/Memory.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Ppu.js\n\n\n\nvar Ppu = /*#__PURE__*/function () {\n  function Ppu(nes) {\n    _classCallCheck(this, Ppu);\n\n    this.isPpu = true;\n    this.nes = nes;\n    this.rom = null;\n    this.cpu = null;\n    this.display = null; // set by .setDisplay();\n    // inside memory\n\n    this.vRam = new _Memory_js__WEBPACK_IMPORTED_MODULE_1__.Memory(16 * 1024); // 16KB\n\n    this.oamRam = new _Memory_js__WEBPACK_IMPORTED_MODULE_1__.Memory(256); // 256B, primary OAM memory\n\n    this.oamRam2 = new _Memory_js__WEBPACK_IMPORTED_MODULE_1__.Memory(32); // 32B, secondary OAM memory\n    // CPU memory mapped registers\n\n    this.ppuctrl = new PpuControlRegister(); // 0x2000\n\n    this.ppumask = new PpuMaskRegister(); // 0x2001, called as PPU Control Register 2\n\n    this.ppustatus = new PpuStatusRegister(); // 0x2002\n\n    this.oamaddr = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit(); // 0x2003, called as SPR-RAM Address Register\n\n    this.oamdata = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit(); // 0x2004, called as SPR-RAM I/O Register\n\n    this.ppuscroll = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit(); // 0x2005, called as VRAM Address Register 1\n\n    this.ppuaddr = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register16bit(); // 0x2006, called as VRAM Address Register 2\n\n    this.ppudata = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit(); // 0x2007, called as VRAM I/O Register\n\n    this.oamdma = new _Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit(); // 0x4014, called as Sprite DMA Register\n    // Name Table, Scroll, VRAM address\n\n    this.name_table_baddr = 0;\n    this.ppuscroll_horizontal = 0;\n    this.ppuscroll_vertical = 0;\n    this.ppuscroll_1st_access = true;\n    this.ppuaddr_1st_access = true;\n  }\n\n  _createClass(Ppu, [{\n    key: \"SetRom\",\n    value: function SetRom(rom) {\n      this.rom = rom;\n    }\n  }, {\n    key: \"SetCpu\",\n    value: function SetCpu(cpu) {\n      this.cpu = cpu;\n    }\n  }, {\n    key: \"SetDisplay\",\n    value: function SetDisplay(display) {\n      this.display = display;\n    }\n  }, {\n    key: \"InitPpu\",\n    value: function InitPpu() {\n      // console.dir(this.ppustatus);\n      this.ppustatus.store(0x80);\n    } // load/store register from Cpu\n\n    /**\r\n     * 0x2000 - 0x2007: PPU registers\r\n     * 0x4014         : Sprite DMA Register\r\n     * load register from Cpu\r\n     */\n\n  }, {\n    key: \"loadRegister\",\n    value: function loadRegister(address) {\n      var value;\n\n      switch (address) {\n        // ppucontrol, ppumask is write only, so return 0\n        case 0x2000:\n        case 0x2001:\n          return 0;\n        // ppustatus load\n\n        case 0x2002:\n          value = this.ppustatus.load(); // this.ppustatus.clearVBlank();\n          // this.registerFirstStore = true;\n\n          return value;\n        // oamaddr is write only, so return 0\n\n        case 0x2003:\n          return 0;\n        // oamdata load\n\n        case 0x2004:\n          return this.oamRam.load(this.oamaddr.load());\n        // ppuscroll, ppuaddr is write only, so return 0\n\n        case 0x2005:\n        case 0x2006:\n          return 0;\n        // ppudata load\n        // temporary implement\n\n        case 0x2007:\n          value = this.vRam.load(this.ppuaddr.data);\n          this.ppuaddr.increment();\n          return value;\n      }\n\n      return 0;\n    }\n    /**\r\n     * 0x2000 - 0x2007: PPU registers\r\n     * 0x4014         : Sprite DMA Register\r\n     * store register from Cpu\r\n     */\n\n  }, {\n    key: \"storeRegister\",\n    value: function storeRegister(address, value) {\n      switch (address) {\n        // ppuctrl store\n        case 0x2000:\n          {\n            this.ppuctrl.store(value);\n            var _baseaddr = 0x2000;\n\n            var _offset = (value & 0x3) << 0x400;\n\n            this.name_table_baddr = _baseaddr + _offset;\n            break;\n          }\n        // ppumask store\n\n        case 0x2001:\n          this.ppumask.store(value);\n          break;\n        // oamaddr store\n\n        case 0x2003:\n          this.oamaddr.store(value);\n          break;\n        // oamdata store\n\n        case 0x2004:\n          this.oamdata.store(value);\n          break;\n        // ppuscroll store\n\n        case 0x2005:\n          this.ppuscroll.store(value);\n          if (this.ppuscroll_1st_access) this.ppuscroll_horizontal = value;else this.ppuscroll_vertical = value;\n          this.ppuscroll_1st_access = ~this.ppuscroll_1st_access;\n          break;\n        // ppuaddr store\n\n        case 0x2006:\n          {\n            var _temp_ppu_addr = 0;\n            if (this.ppuaddr_1st_access) _temp_ppu_addr = this.ppuaddr.data & 0x00FF | (value & 0xFF) << 8;else _temp_ppu_addr = this.ppuaddr.data & 0x00FF | value & 0xFF;\n            this.ppuaddr.store(_temp_ppu_addr);\n            this.ppuaddr_1st_access = ~this.ppuaddr_1st_access;\n            break;\n          }\n        // ppudata store\n\n        case 0x2007:\n          this.ppudata.store(value);\n          this.vRam.store(this.ppuaddr.data, value);\n          this.ppuaddr.increment();\n          break;\n        // oamdma store\n\n        case 0x4014:\n          this.oamdma.store(value);\n          break;\n      }\n    } // dump methods\n\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      var buffer = '';\n      buffer += 'PPU Ctrl: ' + this.ppuctrl.dump() + '\\n';\n      buffer += 'PPU Mask: ' + this.ppumask.dump() + '\\n';\n      buffer += 'PPU Status: ' + this.ppustatus.dump() + '\\n';\n      buffer += 'OAM Address: ' + this.oamaddr.dump() + '\\n';\n      buffer += 'OAM Data: ' + this.oamdata.dump() + '\\n';\n      buffer += 'PPU Scroll: ' + this.ppuscroll.dump() + '\\n';\n      buffer += 'PPU Addr: ' + this.ppuaddr.dump() + '\\n';\n      buffer += 'PPU Data: ' + this.ppudata.dump() + '\\n';\n      buffer += 'OAM DMA: ' + this.oamdma.dump() + '\\n';\n      buffer += '\\n';\n      return buffer;\n    }\n  }]);\n\n  return Ppu;\n}(); // PPU Registers\n\n/**\r\n *\r\n */\n\n\nvar PpuControlRegister = /*#__PURE__*/function (_Register8bit) {\n  _inherits(PpuControlRegister, _Register8bit);\n\n  var _super = _createSuper(PpuControlRegister);\n\n  function PpuControlRegister() {\n    var _this;\n\n    _classCallCheck(this, PpuControlRegister);\n\n    _this = _super.call(this);\n    _this.isPpuControlRegister = true;\n    _this.NMI_VBLANK_BIT = 7;\n    _this.MASTER_SLAVE_BIT = 6;\n    _this.SPRITES_SIZE_BIT = 5;\n    _this.BACKGROUND_PATTERN_TABLE_BIT = 4;\n    _this.SPRITES_PATTERN_TABLE_BIT = 3;\n    _this.INCREMENT_ADDRESS_BIT = 2;\n    _this.NAME_TABLE_ADDRESS_BIT = 0;\n    _this.NAME_TABLE_ADDRESS_BITS_WIDTH = 2;\n    return _this;\n  }\n  /**\r\n   *\r\n   */\n\n\n  _createClass(PpuControlRegister, [{\n    key: \"isIncrementAddressSet\",\n    value: function isIncrementAddressSet() {\n      return this.isBitSet(this.INCREMENT_ADDRESS_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"enabledNmi\",\n    value: function enabledNmi() {\n      return this.isBitSet(this.NMI_VBLANK_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isSpriteSize16\",\n    value: function isSpriteSize16() {\n      return this.isBitSet(this.SPRITES_SIZE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"getBackgroundPatternTableNum\",\n    value: function getBackgroundPatternTableNum() {\n      return this.loadBit(this.BACKGROUND_PATTERN_TABLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"getSpritesPatternTableNum\",\n    value: function getSpritesPatternTableNum() {\n      return this.loadBit(this.SPRITES_PATTERN_TABLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"getNameTableAddress\",\n    value: function getNameTableAddress() {\n      return this.loadBits(this.NAME_TABLE_ADDRESS_BIT, this.NAME_TABLE_ADDRESS_BITS_WIDTH);\n    }\n  }]);\n\n  return PpuControlRegister;\n}(_Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit);\n/**\r\n *\r\n */\n\n\nvar PpuMaskRegister = /*#__PURE__*/function (_Register8bit2) {\n  _inherits(PpuMaskRegister, _Register8bit2);\n\n  var _super2 = _createSuper(PpuMaskRegister);\n\n  function PpuMaskRegister() {\n    var _this2;\n\n    _classCallCheck(this, PpuMaskRegister);\n\n    _this2 = _super2.call(this);\n    _this2.isPpuMaskRegister = true;\n    _this2.GREYSCALE_BIT = 0;\n    _this2.LEFTMOST_BACKGROUND_VISIBLE_BIT = 1;\n    _this2.LEFTMOST_SPRITES_VISIBLE_BIT = 2;\n    _this2.BACKGROUND_VISIBLE_BIT = 3;\n    _this2.SPRITES_VISIBLE_BIT = 4;\n    _this2.EMPHASIZE_RED_BIT = 5;\n    _this2.EMPHASIZE_GREEN_BIT = 6;\n    _this2.EMPHASIZE_BLUE_BIT = 7;\n    return _this2;\n  }\n  /**\r\n   *\r\n   */\n\n\n  _createClass(PpuMaskRegister, [{\n    key: \"isGreyscale\",\n    value: function isGreyscale() {\n      return this.isBitSet(this.GREYSCALE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isLeftMostBackgroundVisible\",\n    value: function isLeftMostBackgroundVisible() {\n      return this.isBitSet(this.LEFTMOST_BACKGROUND_VISIBLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isLeftMostSpritesVisible\",\n    value: function isLeftMostSpritesVisible() {\n      return this.isBitSet(this.LEFTMOST_SPRITES_VISIBLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isBackgroundVisible\",\n    value: function isBackgroundVisible() {\n      return this.isBitSet(this.BACKGROUND_VISIBLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isSpritesVisible\",\n    value: function isSpritesVisible() {\n      return this.isBitSet(this.SPRITES_VISIBLE_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"emphasisRed\",\n    value: function emphasisRed() {\n      return this.isBitSet(this.EMPHASIZE_RED_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"emphasisGreen\",\n    value: function emphasisGreen() {\n      return this.isBitSet(this.EMPHASIZE_GREEN_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"emphasisBlue\",\n    value: function emphasisBlue() {\n      return this.isBitSet(this.EMPHASIZE_BLUE_BIT);\n    }\n  }]);\n\n  return PpuMaskRegister;\n}(_Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit);\n/**\r\n *\r\n */\n\n\nvar PpuStatusRegister = /*#__PURE__*/function (_Register8bit3) {\n  _inherits(PpuStatusRegister, _Register8bit3);\n\n  var _super3 = _createSuper(PpuStatusRegister);\n\n  function PpuStatusRegister() {\n    var _this3;\n\n    _classCallCheck(this, PpuStatusRegister);\n\n    _this3 = _super3.call(this);\n    _this3.isPpuStatusRegister = true;\n    _this3.VBLANK_BIT = 7;\n    _this3.SPRITE_ZERO_HIT_BIT = 6;\n    _this3.SPRITE_OVERFLOW_BIT = 5;\n    _this3.VRAM_SHOULD_BE_IGNORE = 4;\n    return _this3;\n  }\n  /**\r\n   *\r\n   */\n\n\n  _createClass(PpuStatusRegister, [{\n    key: \"setVBlank\",\n    value: function setVBlank() {\n      this.setBit(this.VBLANK_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"clearVBlank\",\n    value: function clearVBlank() {\n      this.clearBit(this.VBLANK_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"setZeroHit\",\n    value: function setZeroHit() {\n      this.setBit(this.SPRITE_ZERO_HIT_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"clearZeroHit\",\n    value: function clearZeroHit() {\n      this.clearBit(this.SPRITE_ZERO_HIT_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"setOverflow\",\n    value: function setOverflow() {\n      this.setBit(this.SPRITE_OVERFLOW_BIT);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"clearOverflow\",\n    value: function clearOverflow() {\n      this.clearBit(this.SPRITE_OVERFLOW_BIT);\n    }\n  }]);\n\n  return PpuStatusRegister;\n}(_Register_js__WEBPACK_IMPORTED_MODULE_0__.Register8bit);\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Ppu.js?");

/***/ }),

/***/ "./src/NES/Register.js":
/*!*****************************!*\
  !*** ./src/NES/Register.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Register8bit\": () => (/* binding */ Register8bit),\n/* harmony export */   \"Register16bit\": () => (/* binding */ Register16bit)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./src/NES/logger.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Register.js\n\n/**\r\n * General Register implementation.\r\n * Specific register for CPU and PPU are implemented in each class.\r\n */\n// Register type 1 is 8bitRegister, type 2 has 16bit.\n\nvar Register = /*#__PURE__*/function () {\n  function Register(type) {\n    _classCallCheck(this, Register);\n\n    if (type === 2) {\n      this.isRegister16bit = true;\n      this.type = 2; // 16bit Register\n\n      this.data = new Uint16Array(1);\n    } else {\n      this.isRegister8bit = true;\n      this.type = 1; // 8bit Register\n\n      this.data = new Uint8Array(1);\n    }\n\n    this.clear();\n  }\n  /**\r\n   *\r\n   */\n\n\n  _createClass(Register, [{\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.data.byteLength * 8;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load() {\n      return this.data[0];\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"loadBit\",\n    value: function loadBit(pos) {\n      return this.data[0] >> pos & 1;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"loadBits\",\n    value: function loadBits(offset, size) {\n      return this.data[0] >> offset & (1 << size) - 1;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(value) {\n      this.data[0] = value;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"storeBit\",\n    value: function storeBit(pos, value) {\n      value = value & 1; // just in case\n\n      this.data[0] = this.data[0] & ~(1 << pos) | value << pos;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"storeBits\",\n    value: function storeBits(offset, size, value) {\n      var mask = (1 << size) - 1;\n      value = value & mask; // just in case\n\n      this.data[0] = this.data[0] & ~(mask << offset) | value << offset;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.data[0] = 0;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"setBit\",\n    value: function setBit(pos) {\n      this.storeBit(pos, 1);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"clearBit\",\n    value: function clearBit(pos) {\n      this.storeBit(pos, 0);\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"isBitSet\",\n    value: function isBitSet(pos) {\n      return this.loadBit(pos) === 1;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      this.data[0]++;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"incrementBy2\",\n    value: function incrementBy2() {\n      this.data[0] += 2;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      this.data[0] += value;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      this.data[0]--;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"decrementBy2\",\n    value: function decrementBy2() {\n      this.data[0] -= 2;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"sub\",\n    value: function sub(value) {\n      this.data[0] -= value;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(value) {\n      value = value & 1; // just in case\n\n      var carry = this.loadBit(this.getWidth() - 1);\n      this.data[0] = this.data[0] << 1 | value;\n      return carry;\n    }\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      if (this.type === 1) {\n        // log.logHex(this.data);\n        return _logger_js__WEBPACK_IMPORTED_MODULE_0__.log.toHex(this.data[0]);\n      } else if (this.type === 2) {\n        var buffer = '';\n        buffer += _logger_js__WEBPACK_IMPORTED_MODULE_0__.log.toHex(this.data[0] >> 8 & 0xFF);\n        buffer += _logger_js__WEBPACK_IMPORTED_MODULE_0__.log.toHex(this.data[0] & 0xFF); // console.log(buffer)\n\n        return buffer;\n      } else {\n        return '';\n      }\n    }\n  }]);\n\n  return Register;\n}();\n\nvar Register8bit = /*#__PURE__*/function (_Register) {\n  _inherits(Register8bit, _Register);\n\n  var _super = _createSuper(Register8bit);\n\n  function Register8bit() {\n    var _this;\n\n    _classCallCheck(this, Register8bit);\n\n    _this = _super.call(this, 1);\n    _this.isRegister8bit = true;\n    return _this;\n  }\n\n  return _createClass(Register8bit);\n}(Register);\n\nvar Register16bit = /*#__PURE__*/function (_Register2) {\n  _inherits(Register16bit, _Register2);\n\n  var _super2 = _createSuper(Register16bit);\n\n  function Register16bit() {\n    var _this2;\n\n    _classCallCheck(this, Register16bit);\n\n    _this2 = _super2.call(this, 2);\n    _this2.isRegister16bit = true;\n    return _this2;\n  }\n  /**\r\n   *\r\n   */\n\n\n  _createClass(Register16bit, [{\n    key: \"loadHigherByte\",\n    value: function loadHigherByte() {\n      return this.bytes[1];\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"loadLowerByte\",\n    value: function loadLowerByte() {\n      return this.bytes[0];\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"storeHigherByte\",\n    value: function storeHigherByte(value) {\n      this.bytes[1] = value;\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"storeLowerByte\",\n    value: function storeLowerByte(value) {\n      this.bytes[0] = value;\n    }\n  }]);\n\n  return Register16bit;\n}(Register);\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Register.js?");

/***/ }),

/***/ "./src/NES/Rom.js":
/*!************************!*\
  !*** ./src/NES/Rom.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rom\": () => (/* binding */ Rom)\n/* harmony export */ });\n/* harmony import */ var _Memory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Memory.js */ \"./src/NES/Memory.js\");\n/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Mapper.js */ \"./src/NES/Mapper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// Rom.js\n\n\n\nvar Rom = /*#__PURE__*/function () {\n  function Rom(nes) {\n    _classCallCheck(this, Rom);\n\n    this.isRom = true;\n    this.nes = nes;\n    this.data = null;\n    this.size = 0;\n    this.header = null;\n    this.header_parse = null;\n    this.mapper = null;\n  }\n\n  _createClass(Rom, [{\n    key: \"SetRom\",\n    value: function SetRom(arrayBuffer) {\n      this.data = new _Memory_js__WEBPACK_IMPORTED_MODULE_0__.Memory(arrayBuffer);\n      this.size = this.data.getCapacity();\n      console.log('[Rom.SetRom] data size : ' + this.size); // console.dir(this.data);\n\n      this.header = new _Memory_js__WEBPACK_IMPORTED_MODULE_0__.Memory(16);\n\n      for (var i = 0; i < 16; i++) {\n        this.header.data[i] = this.data.load(i);\n      }\n\n      if (this._isNes()) {\n        this.header_parse = this._ParseHeader(this.header); // this.mapper = new Memory(256); // temporary mapper\n\n        this.mapper = new _Mapper_js__WEBPACK_IMPORTED_MODULE_1__.Mapper(this);\n        console.log('Mapper Num : ' + this.header_parse.mapper_num + ' (' + this.mapper.getName() + ')');\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"_isNes\",\n    value: function _isNes() {\n      if ([].slice.call(this.header.data, 0, 3).map(function (v) {\n        return String.fromCharCode(v);\n      }).join('') !== 'NES') {\n        console.error('This file is not NES format.');\n        return false;\n      } else {\n        console.log('This file is NES format.');\n        console.log(this.header);\n        return true;\n      }\n    }\n  }, {\n    key: \"_ParseHeader\",\n    value: function _ParseHeader(header) {\n      if (header === null) return;\n      var _parse = {}; // header size is 16B\n\n      _parse.header_size = 0x10; // PRG_ROM_BANKS_NUM_ADDRESS = 0x4\n\n      _parse.prg_bank_num = header.load(4); // CHR_ROM_BANKS_NUM_ADDRESS = 0x5\n\n      _parse.chr_bank_num = header.load(5); // CONTROL_BYTE1_ADDRESS = 0x6, CONTROL_BYTE2_ADDRESS = 0x7\n\n      _parse.isHorizontalMirror = header.load(6) & 0x01 ? false : true;\n      _parse.isPresenceBatteryRAM = header.load(6) & 0x02 ? true : false;\n      _parse.isPresenceTrainer = header.load(6) & 0x04 ? true : false;\n      _parse.isFourScreenMirror = header.load(6) & 0x08 ? true : false;\n      _parse.mapper_num = (header.load(6) & 0xF0) >> 4 | this.header.load(7) & 0xF0; // SCREEN TYPE\n\n      _parse.screen_type = 0; // SINGLE_SCREEN\n\n      if (_parse.isFourScreenMirror) {\n        _parse.screen_type = 3; // FOUR_SCREEN\n      } else if (_parse.isHorizontalMirror) {\n        _parse.screen_type = 1; // HORIZONTAL\n      } else {\n        _parse.screen_type = 2; // VERTICAL\n      }\n\n      return _parse;\n    }\n    /**\r\n     * load/store methods called by CPU.\r\n     *\r\n     * CPU memory address:\r\n     * 0x0000 - 0x1FFF: Character ROM access\r\n     * 0x8000 - 0xFFFF: Program ROM access\r\n     *\r\n     * To access wide range ROM data with limited CPU memory address space\r\n     * Mapper maps CPU memory address to ROM's.\r\n     * In general writing control registers in Mapper via .store() switches bank.\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(address) {\n      var addressInRom = this.header_parse.header_size;\n\n      if (address < 0x2000) {\n        // Character ROM access\n        addressInRom += this.header_parse.prg_bank_num * 0x4000;\n        addressInRom += this.mapper.mapForChrRom(address);\n      } else {\n        // Program ROM access\n        addressInRom += this.mapper.map(address);\n      }\n\n      return this.data.load(addressInRom);\n    }\n    /**\r\n     * In general writing with ROM address space updates control registers in Mapper.\r\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(address, value) {\n      this.mapper.store(address & 0xFF, value);\n    }\n  }, {\n    key: \"dump\",\n    value: function dump() {\n      return this.data.dump();\n    }\n  }, {\n    key: \"header_dump\",\n    value: function header_dump() {\n      return this.header.dump();\n    }\n  }, {\n    key: \"header_info\",\n    value: function header_info() {\n      var buffer = '';\n      buffer += 'PRG-ROM banks size: ' + this.header_parse.prg_bank_num * 16 + '(KB)\\n';\n      buffer += 'CHR-ROM banks size: ' + this.header_parse.chr_bank_num * 8 + '(KB)\\n';\n      buffer += 'mapper number : ' + this.header_parse.mapper_num + '\\n';\n      buffer += 'screen type   : ';\n\n      switch (this.header_parse.screen_type) {\n        case 1:\n          buffer += 'HORIZONTAL';\n          break;\n\n        case 2:\n          buffer += 'VERTICAL';\n          break;\n\n        case 3:\n          buffer += 'FOUR_SCREEN';\n          break;\n\n        default:\n          buffer += 'SINGLE_SCREEN';\n          break;\n      }\n\n      buffer += '\\n\\n';\n      return buffer;\n    }\n  }]);\n\n  return Rom;\n}();\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/Rom.js?");

/***/ }),

/***/ "./src/NES/dump_nes.js":
/*!*****************************!*\
  !*** ./src/NES/dump_nes.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dump_nes\": () => (/* binding */ dump_nes)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// dump_nes.js\n// import log from './logger';\n// 定数\nvar DUMP_Level = 1; // 1 is short message, 2 is long message\n// const DUMP_Level = 2; // 1 is short message, 2 is long message\n//\n\n/**\r\n * dump methods\r\n */\n\nvar dump_nes = /*#__PURE__*/function () {\n  function dump_nes(area) {\n    _classCallCheck(this, dump_nes);\n\n    this.area = area;\n    this.clrMessage();\n    this.putMessage('add dump console..');\n  }\n\n  _createClass(dump_nes, [{\n    key: \"putMessage\",\n    value: function putMessage(str) {\n      if (DUMP_Level >= 1) console.log(str);\n      this.area.value += str + '\\n';\n      this.area.scrollTop = this.area.scrollHeight;\n    }\n  }, {\n    key: \"clrMessage\",\n    value: function clrMessage() {\n      this.area.value = '';\n    }\n  }]);\n\n  return dump_nes;\n}();\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/dump_nes.js?");

/***/ }),

/***/ "./src/NES/logger.js":
/*!***************************!*\
  !*** ./src/NES/logger.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log\": () => (/* binding */ log),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* logger.js */\n\n/**\r\n *\r\n */\nfunction convertDecToHexString(num, width) {\n  var noPrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var str = num.toString(16);\n  var prefix = '';\n  if (num < 0) prefix += '-';\n  if (noPrefix !== true) prefix += '0x';\n  if (width === undefined) return prefix + str;\n  var base = '';\n\n  for (var i = 0; i < width; i++) {\n    base += '0';\n  }\n\n  return prefix + (base + str).substr(-1 * width);\n}\n/**\r\n * バイト配列を16進数表記文字列に変換する\r\n */\n\n\nfunction toHEX(num) {\n  return num < 16 ? '0' + num.toString(16).toUpperCase() : num.toString(16).toUpperCase();\n}\n\nfunction strHEXarray(buf) {\n  var hex_str = '\\n';\n\n  for (var i in buf) {\n    if (i % 16 === 0) {\n      hex_str += convertDecToHexString(i, 8, false) + ': ';\n    }\n\n    hex_str += toHEX(buf[i]) + ' ';\n\n    if (i % 16 === 0xF) {\n      hex_str += '\\n';\n    }\n  }\n\n  return hex_str;\n}\n\nvar log = {\n  toHex: function toHex(num) {\n    return toHEX(num);\n  },\n  toHexarray: function toHexarray(buf) {\n    return strHEXarray(buf);\n  },\n  logHex: function logHex(num) {\n    console.log(toHEX(num));\n  },\n  logHexarray: function logHexarray(buf) {\n    console.log(strHEXarray(buf));\n  },\n  DecToHexString: function DecToHexString(num, width, noPrefix) {\n    return convertDecToHexString(num, width, noPrefix);\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (log);\n\n//# sourceURL=webpack://trial_nesjs/./src/NES/logger.js?");

/***/ }),

/***/ "./src/Nes.js":
/*!********************!*\
  !*** ./src/Nes.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Nes\": () => (/* binding */ Nes)\n/* harmony export */ });\n/* harmony import */ var _NES_Display_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NES/Display.js */ \"./src/NES/Display.js\");\n/* harmony import */ var _NES_Cpu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NES/Cpu.js */ \"./src/NES/Cpu.js\");\n/* harmony import */ var _NES_Ppu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NES/Ppu.js */ \"./src/NES/Ppu.js\");\n/* harmony import */ var _NES_Rom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NES/Rom.js */ \"./src/NES/Rom.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// NES.js\n\n\n\n // クラス\n\nvar Nes = /*#__PURE__*/function () {\n  function Nes(canvas) {\n    _classCallCheck(this, Nes);\n\n    this.isNes = true;\n    this.display = new _NES_Display_js__WEBPACK_IMPORTED_MODULE_0__.Display(canvas);\n    this.cpu = new _NES_Cpu_js__WEBPACK_IMPORTED_MODULE_1__.Cpu(this);\n    this.ppu = new _NES_Ppu_js__WEBPACK_IMPORTED_MODULE_2__.Ppu(this);\n    this.rom = new _NES_Rom_js__WEBPACK_IMPORTED_MODULE_3__.Rom(this);\n    this.cpu.SetPpu(this.ppu);\n    this.ppu.SetCpu(this.cpu);\n    this.ppu.SetDisplay(this.display);\n  }\n\n  _createClass(Nes, [{\n    key: \"SetRom\",\n    value: function SetRom(arrayBuffer) {\n      if (!this.rom.SetRom(arrayBuffer)) {\n        // if failure\n        return false;\n      } else {\n        this.cpu.SetRom(this.rom);\n        this.ppu.SetRom(this.rom);\n      }\n\n      return this.rom;\n    }\n  }, {\n    key: \"Init\",\n    value: function Init() {\n      this.cpu.InitCpu();\n      this.ppu.InitPpu();\n    }\n  }, {\n    key: \"Run\",\n    value: function Run() {\n      // let cycles = (341 * 262 / 3) | 0; // TODO: temporal\n      var cycles = 16; // TODO: temporal\n\n      for (var i = 0; i < cycles; i++) {\n        this.runCycle();\n      } // if (this.state === this.STATES.RUN)\n      //   requestAnimationFrame(this.runFunc);\n\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"runCycle\",\n    value: function runCycle() {\n      this.cpu.runCycle(); // this.ppu.runCycle();\n      // this.ppu.runCycle();\n      // this.ppu.runCycle();\n    }\n  }]);\n\n  return Nes;\n}();\n\n\n\n//# sourceURL=webpack://trial_nesjs/./src/Nes.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_vendors_bootstrap_reboot_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/vendors/bootstrap-reboot.css */ \"./src/styles/vendors/bootstrap-reboot.css\");\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style.scss */ \"./src/style.scss\");\n/* harmony import */ var _Nes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Nes.js */ \"./src/Nes.js\");\n/* harmony import */ var _NES_dump_nes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NES/dump_nes.js */ \"./src/NES/dump_nes.js\");\n // import CSS files\n\n\n //\n// import JS files\n\n\n // 主要要素の取得\n\nvar canvas, dbg_console;\nvar nes, dump; // 初期化\n\nfunction init() {\n  canvas = document.querySelector('#NESdisplay');\n  nes = new _Nes_js__WEBPACK_IMPORTED_MODULE_2__.Nes(canvas);\n  window.nes = nes; // 画面の高さに応じてcanvasサイズ変更\n\n  nes.display.resizeCanvas(); // DOM イベントの初期化\n\n  initializeDomEvents(); // console\n\n  dbg_console = document.querySelector('#DBGconsole');\n  dump = new _NES_dump_nes_js__WEBPACK_IMPORTED_MODULE_3__.dump_nes(dbg_console);\n  window.dump = dump;\n} // ROM をNESにセットする\n\n\nfunction nes_rom_change(arraybuffer) {\n  dump.putMessage('Rom load...');\n\n  if (!nes.SetRom(arraybuffer)) {\n    console.error(\"Can't get rom data (perhaps you don't set ArrayBuffer arguments or it's not nes rom format)\");\n    return;\n  } else {\n    dump.putMessage('Header is ');\n    dump.putMessage(nes.rom.header_dump());\n    dump.putMessage(nes.rom.header_info());\n  }\n\n  nes.Init();\n  dump.putMessage('NES Init...');\n  dump.putMessage(nes.cpu.dump());\n  dump.putMessage(nes.ppu.dump());\n  nes.Run();\n  dump.putMessage('after Run.');\n} // ローカル上のROMを読み込み\n\n\nfunction read_local_file(fileObj, cb) {\n  dump.putMessage('read filename is ' + fileObj.name);\n  var reader = new FileReader();\n\n  reader.onload = function (e) {\n    cb(e.target.result);\n  };\n\n  reader.readAsArrayBuffer(fileObj);\n} // URL からROMを読み込み\n\n\nfunction read_url(url, cb) {\n  dump.putMessage('rom url is ' + url);\n  var request = new XMLHttpRequest();\n\n  request.onload = function () {\n    cb(request.response);\n  };\n\n  request.onerror = function (e) {\n    console.error(\"can't get rom binary. Error is \", e);\n  };\n\n  request.open('GET', url, true);\n  request.responseType = 'arraybuffer';\n  request.send(null);\n} // DOMのイベントを設定\n\n\nfunction initializeDomEvents() {\n  if (typeof window.FileReader !== \"undefined\") {\n    // ドラッグ&ドロップでROM読み込み\n    window.addEventListener(\"dragenter\", function (e) {\n      e.preventDefault();\n    }, false);\n    window.addEventListener(\"dragover\", function (e) {\n      e.preventDefault();\n    }, false);\n    window.addEventListener(\"drop\", function (e) {\n      e.preventDefault();\n      read_local_file(e.dataTransfer.files[0], nes_rom_change);\n    }, false); // プルダウンから ROM読み込み\n\n    document.getElementById(\"romload\").addEventListener(\"click\", function (e) {\n      e.preventDefault(); // ROM の場所\n\n      var url = document.getElementById(\"romlist\").value;\n      read_url(url, nes_rom_change);\n    }, false); // Debug Console をクリア\n\n    document.querySelector(\"#nes_reset\").addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      dump.clrMessage();\n      dump.putMessage('NES Reset...\\n');\n      nes.Init();\n      dump.putMessage(nes.cpu.dump());\n      dump.putMessage(nes.ppu.dump());\n      nes.Run();\n    }, false); // \n    // Debug Console をクリア\n\n    document.querySelector(\"#clear_console\").addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      dump.clrMessage();\n      dump.putMessage('clear message...\\n');\n    }, false); // ROMをダンプ\n\n    document.querySelector(\"#dump_rom\").addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      dump.putMessage('\\n\\n# Dump ROM data');\n      dump.putMessage(nes.rom.dump());\n    }, false); // Cpu memory をダンプ\n\n    document.querySelector(\"#dump_cpumem\").addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      dump.putMessage('\\n\\n# Dump CPU Memory');\n      dump.putMessage(nes.cpu.dump_memory_map());\n    }, false);\n  } // 画面の高さに応じてcanvasサイズ変更\n\n\n  window.addEventListener('resize', function () {\n    nes.display.resizeCanvas();\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  init();\n});\n\n//# sourceURL=webpack://trial_nesjs/./src/main.js?");

/***/ }),

/***/ "./src/style.scss":
/*!************************!*\
  !*** ./src/style.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://trial_nesjs/./src/style.scss?");

/***/ }),

/***/ "./src/styles/vendors/bootstrap-reboot.css":
/*!*************************************************!*\
  !*** ./src/styles/vendors/bootstrap-reboot.css ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://trial_nesjs/./src/styles/vendors/bootstrap-reboot.css?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;