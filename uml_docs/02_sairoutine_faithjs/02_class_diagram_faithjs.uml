@startuml
' 02_class_diagram_faithjs.puml

Title 
Class Diagram of sairoutine's faithjs
github : https://github.com/sairoutine/faithjs.git
end Title

left to right direction
object User
object index.html {
  title = "faithjs"
  canvas : '#mainCanvas'
  button : '#start'
  button : '#pause'
  button : '#RESET'
  button : '#FULL SCREEN'
}
User->index.html
index.html.>Main
Main..>NES_field
NES_field--NES_methods
NES_methods..>Mappers
Mappers--Base
NES_methods<--Base

Class Main {
  {field} canvas : DOM('#mainCanvas')
  {field} nes : NES(canvas)
  {field} read_local_file: CB.FileReader()
  {field} read_url: CB.XMLHttpRequest()
  {field} initialize_dom_events: Fn.
  {method} nes_pause()
  {method} nes_start()
  {method} nes_reset()
  {method} nes_rom_change(arraybuffer)
  {method} resize_canvas()
  {method} fullscreen()
  {method} initialize_dom_events()
}
Class NES_field {
  {field} requestID : window.reqAnimaFrm.
  {field} ctx : canvas.getCnt("2d").
  __ レジスタ __
  {field} A 
  {field} X 
  {field} Y 
  {field} S
  {field} P
  {field} PC
  __ 割り込み __
  {field} toNMI
  {field} toIRQ
  {field} CPUClock
  __ キャッシュテーブル __
  {field} ZNCacheTable : Array(256)
  {field} ZNCacheTableCMP : Array(512)
  __ NES PPU __
  {field} ScrollRegisterFlag
  {field} PPUAddressRegisterFlag
  {field} HScrollTmp
  {field} PPUAddress
  {field} PPUAddressBuffer
  {field} Palette
  {field} SpriteLineBuffer
  {field} PPUReadBuffer
  {field} BgLineBuffer
  {field} SPBitArray : Array(256)(256)(8).
  {field} PaletteArray
  {field} PpuX
  {field} PpuY
  {field} DrawFlag
  -- PPU (0x2000 〜 0x2007) --
  {field} IO1 : Array(8)
  __ 画面データ __
  {field} ImageData
  {field} DrawFlag
  {field} Sprite0Line
  __ NES Header __
  {field} PrgRomPageCount
  {field} ChrRomPageCount
  {field} HMirror : boolean
  {field} VMirror : boolean
  {field} SramEnable : boolean
  {field} TrainerEnable : boolean
  {field} FourScreen : boolean
  {field} HMirror : boolean
  {field} HMirror : boolean
  {field} MapperNumber
  {field} Mapper : Mapper
  __ NES Storage __
  {field} RAM  : Array(0x0800)
  {field} SRAM : Array(0x2000)
  {field} VRAM : Array(16)
  {field} VRAMS: Array(16)(0x0400)
  {field} SPRITE_RAM : Array(0x100)
  {field} ROM : Array(4)
  {field} PRGROM_STATE : Array(4)
  {field} CHRROM_STATE : Array(8)
  {field} ROM : Array(4)
  {field} PRGROM_PAGES
  {field} CHRROM_PAGES
  {field} Rom : ArrayBuffer
  __ JoyPad __
  {field} JoyPadStrobe : boolean
  {field} JoyPadState : Array(2)
  {field} JoyPadBuffer: Array(2)
  {field} isConnectedGamePad1P : boolean
  {field} isConnectedGamePad2P : boolean
  __ APU __
  {field} MainClock = 1789772.5;
  {field} WaveOut : boolean
  {field} Wave***
  {field} WaveLengthCount : Array(0x20)
  {field} WaveCh*_***
  {field} WebAudio***
  -- APU (0x4000 〜 0x4017) --
  {field} IO2 : Array(0x20)
  __ EX Sound __
  {field} FDS_***
  {field} MMC5_***
  {field} VRC6_***
  {field} N163_***
  {field} AY_***
  __ 定数 __
  {field} BUTTON_***
  {field} CycleTable : Array(256)
  {field} REG_***
  __ Mapper __
  {field} Mapper : Mapper*(NES)
}
Class NES_methods {
  {method} Init()
  {method} ParseHeader()
  {method} MapperSelect()
  {method} Start()
  {method} Run()
  {method} Pause()
  {method} Reset()
  {method} ctx : canvas.getCnt("2d").
  __ NES CPU __
  {method} CpuInit()
  {method} CpuRun()
  {method} ExecuteOpCode()
  {method} Set***Flag()
  {method} Clear***Flag()
  {method} GetAddress***()
  {method} Push()
  {method} Pop()
  {method} "OpCode"()
  __ 割り込み __
  {method} CpuReset()
  {method} NMI()
  {method} IRQ()
  {method} BRK()
  __ NES PPU __
  {method} PpuInit()
  {method} SetMirror()
  {method} SetMirrors()
  {method} SetChrRomPage1K()
  {method} SetChrRomPages1K()
  {method} SetChrRomPage()
  {method} initCanvas()
  {method} PpuRun()
  {method} BuildBGLine()
  {method} BuildBGLine_SUB()
  {method} BuildSpriteLine()
  {method} BuildSpriteLine_SUB()
  {method} Write***"PPURegister"()
  {method} Read***"PPU"()
  __ NES RAM or ROM __
  {method} StorageClear()
  {method} SetRom()
  {method} StorageInit()
  {method} Get()
  {method} Get16()
  {method} Set()
  {method} SetPrgRomPage8K()
  {method} SetPrgRomPages8K()
  {method} SetPrgRomPage()
  __ JoyPad __
  {method} WriteJoyPadRegister*()
  {method} ReadJoyPadRegister1()
  {method} handleKeyUp()
  {method} handleKeyDown()
  {method} _keyCodeToBitCode()
  {method} _buttonIDToBitCode()
  {method} _handleGamePads()
  {method} _handleGamePad()
  __ APU __
  {method} ApuInit()
  {method} ApuRun()
  {method} Web"APU"***()
  {method} Read"APU"***()
  {method} SetCh5Delta()
  {method} Out_Apu()
  {method} WaveFrameSequencer()
  {method} WaveCh***()
  __ EX Sound __
  {method} EXSoundInit()
  {method} Init_FDS()
  {method} Write_FDS_***()
  {method} Count_FDS()
  {method} Out_FDS()
  {method} Init_MMC5()
  {method} Write_MMC5_***()
  {method} Read_MMC5_***()
  {method} Count_MMC5()
  {method} Out_MMC5()
  {method} Init_VRC6()
  {method} Count_VRC6()
  {method} Out_VRC6()
  {method} Init_N163()
  {method} Write_N163_RAM()
  {method} Read_N163_RAM()
  {method} Count_N163()
  {method} Out_N163()
  {method} Init_AY()
  {method} Select_AY_REG()
  {method} Write_AY_REG()
  {method} Read_AY_REG()
  {method} Count_AY()
  {method} Out_AY()
  {method} webAudioContextResume()
}
Class Mappers {
  {method} Init()
}
Class Base {
  {field} nes = nes
  {field} MAPPER_REG
  {method} Init()
  {method} ReadLow()
  {method} WriteLow()
  {method} ReadPPUData()
  {method} WritePPUData()
  {method} BuildBGLine()
  {method} BuildSpriteLine()
  {method} ReadSRAM()
  {method} WriteSRAM()
  {method} Write()
  {method} HSync()
  {method} CPUSync()
  {method} SetIRQ()
  {method} ClearIRQ()
  {method} OutEXSound()
  {method} EXSoundSync()
  {method} GetState()
  {method} SetState()
}


@enduml